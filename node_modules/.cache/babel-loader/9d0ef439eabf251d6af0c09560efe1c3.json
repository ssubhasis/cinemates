{"ast":null,"code":"var _jsxFileName = \"/Users/simranbhamra/Documents/cinemates/src/Components/UserComments.js\";\nimport React, { Component } from 'react';\nimport { GridItem, Box, Text, Heading, Button } from \"@chakra-ui/react\";\nimport axios from 'axios';\nimport DeleteComment from './DeleteComment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class UserComments extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title_id: this.props.id,\n      comments: [],\n      del_comnt: [],\n      cmnt: ''\n    }; //this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  getComments() {\n    console.log(this.state.title_id);\n    let api = 'http://18.206.168.148:5000/movie/' + this.state.title_id;\n    fetch(api).then(response => response.json()).then(response => {\n      console.log(response.user_comments);\n      if (response.user_comments === undefined) this.setState({\n        comments: []\n      });else this.setState({\n        comments: response.user_comments\n      });\n      console.log(response);\n    });\n  }\n\n  componentDidMount() {\n    this.getComments();\n  }\n\n  handleDelete(title_id, cmnt_id) {\n    console.log(title_id, cmnt_id);\n    DeleteComment(title_id, cmnt_id);\n    window.location.reload(false);\n  }\n\n  handleChangeComment() {\n    this.state.cmnt.user_comment = cmnt.user_comment;\n  }\n\n  updateComment(id, cmnt, cmnt_id) {\n    const request_option = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"titleId\": id,\n        \"userId\": \"ui00001\",\n        \"userComment\": cmnt,\n        'comment_seq': cmnt_id\n      })\n    };\n    console.log(request_option);\n    fetch('http://18.206.168.148:5000/movie/post-comment', request_option).then(res => res.json()).then(resp => {\n      console.log(resp);\n    });\n    console.log(cmnt);\n  }\n\n  render() {\n    console.log(this.state);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        textAlign: \"left\",\n        color: \"white\",\n        children: \" User Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 10\n      }, this), this.state.comments.map((cmnt, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          bg: \"white\",\n          p: \"5px\",\n          borderRadius: \"md\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            textAlign: \"left\",\n            color: \"blue\",\n            children: [cmnt.user_id, \" : \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            onChange: this.handleChangeComment,\n            contentEditable: \"true\",\n            textAlign: \"left\",\n            children: cmnt.user_comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              this.updateComment(this.state.title_id, cmnt.user_comment, cmnt.comment_seq);\n            },\n            children: \" Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 131\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              this.handleDelete(this.state.title_id, cmnt.comment_seq);\n            },\n            children: \" Delete \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 12\n        }, this)]\n      }, cmnt.titleId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 8\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/simranbhamra/Documents/cinemates/src/Components/UserComments.js"],"names":["React","Component","GridItem","Box","Text","Heading","Button","axios","DeleteComment","UserComments","constructor","props","state","title_id","id","comments","del_comnt","cmnt","getComments","console","log","api","fetch","then","response","json","user_comments","undefined","setState","componentDidMount","handleDelete","cmnt_id","window","location","reload","handleChangeComment","user_comment","updateComment","request_option","method","headers","body","JSON","stringify","res","resp","render","map","index","user_id","comment_seq","titleId"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {GridItem,Box, Text, Heading,Button} from \"@chakra-ui/react\";\nimport axios from 'axios';\nimport DeleteComment from './DeleteComment';\n\nexport default class UserComments extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = { \n          title_id : this.props.id,\n          comments : [],\n          del_comnt : [],\n          cmnt:''\n        };\n       //this.handleDelete = this.handleDelete.bind(this);\n      }\n\n\n\n      getComments() {\n        console.log(this.state.title_id)\n        let api = 'http://18.206.168.148:5000/movie/' + this.state.title_id\n        fetch(api)\n          .then(response =>  response.json())\n          .then(response => {\n            console.log(response.user_comments)\n            if (response.user_comments===undefined) this.setState({ comments: []})\n            else this.setState({\n                comments: response.user_comments\n            })\n            console.log(response)\n          })\n      }\n\n      \n      componentDidMount() {\n        this.getComments(); \n      }\n\n      handleDelete(title_id,cmnt_id){\n        console.log(title_id,cmnt_id)\n        DeleteComment(title_id,cmnt_id)\n        window.location.reload(false);\n      } \n\n      handleChangeComment(){\n        this.state.cmnt.user_comment =  cmnt.user_comment\n      } \n\n      updateComment(id,cmnt, cmnt_id){\n        const request_option = {\n          method : 'POST',\n          headers: {'Content-Type': 'application/json'},\n          body : JSON.stringify({\"titleId\": id, \"userId\": \"ui00001\", \"userComment\": cmnt, 'comment_seq': cmnt_id})\n        };\n\n        console.log(request_option)\n        fetch('http://18.206.168.148:5000/movie/post-comment',request_option)\n           .then(res => res.json())\n           .then((resp) => {console.log(resp)});\n         \n           console.log(cmnt)\n      }\n\n      render(){\n        console.log(this.state)\n          return (\n       <div>\n         <Text textAlign = \"left\" color = \"white\"> User Comments</Text>\n        {this.state.comments.map((cmnt, index) => (\n        <div key={cmnt.titleId}>\n          <br />\n           <Box bg=\"white\" p=\"5px\" borderRadius=\"md\">\n           <Text textAlign = \"left\" color = \"blue\">{cmnt.user_id} : </Text>\n           <Text onChange ={this.handleChangeComment} contentEditable=\"true\" textAlign = \"left\">{cmnt.user_comment}</Text>\n           <Button  onClick={() => {this.updateComment(this.state.title_id, cmnt.user_comment ,cmnt.comment_seq) }}> Save</Button><br />\n            <Button onClick={() => { this.handleDelete(this.state.title_id,cmnt.comment_seq) }} > Delete </Button> \n           </Box>\n        </div>\n\n    ))}\n\n        </div>  \n        \n        \n          );\n      }\n\n\n\n}\n\n"]},"metadata":{},"sourceType":"module"}