{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\"; // @inheritedComponent IconButton\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType, deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { alpha, darken, lighten } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled, { shouldForwardProp } from '../styles/experimentalStyled';\nimport switchClasses, { getSwitchUtilityClass } from './switchClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, styleProps.edge && styles[`edge${capitalize(styleProps.edge)}`], styles[`size${capitalize(styleProps.size)}`], {\n    [`& .${switchClasses.switchBase}`]: _extends({}, styles.switchBase, styles.input, styleProps.color !== 'default' && styles[`color${capitalize(styleProps.color)}`]),\n    [`& .${switchClasses.thumb}`]: styles.thumb,\n    [`& .${switchClasses.track}`]: styles.track\n  }), styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    edge,\n    size,\n    color,\n    checked,\n    disabled\n  } = styleProps;\n  const slots = {\n    root: ['root', edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`],\n    switchBase: ['switchBase', `color${capitalize(color)}`, checked && 'checked', disabled && 'disabled'],\n    thumb: ['thumb'],\n    track: ['track'],\n    input: ['input']\n  };\n  const composedClasses = composeClasses(slots, getSwitchUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst SwitchRoot = experimentalStyled('span', {}, {\n  name: 'MuiSwitch',\n  slot: 'Root',\n  overridesResolver\n})(({\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  display: 'inline-flex',\n  width: 34 + 12 * 2,\n  height: 14 + 12 * 2,\n  overflow: 'hidden',\n  padding: 12,\n  boxSizing: 'border-box',\n  position: 'relative',\n  flexShrink: 0,\n  zIndex: 0,\n  // Reset the stacking context.\n  verticalAlign: 'middle',\n  // For correct alignment with the text.\n  '@media print': {\n    colorAdjust: 'exact'\n  }\n}, styleProps.edge === 'start' && {\n  marginLeft: -8\n}, styleProps.edge === 'end' && {\n  marginRight: -8\n}, styleProps.size === 'small' && {\n  width: 40,\n  height: 24,\n  padding: 7,\n  [`& .${switchClasses.thumb}`]: {\n    width: 16,\n    height: 16\n  },\n  [`& .${switchClasses.switchBase}`]: {\n    padding: 4,\n    '&.Mui-checked': {\n      transform: 'translateX(16px)'\n    }\n  }\n}));\nconst SwitchSwitchBase = experimentalStyled(SwitchBase, {\n  shouldForwardProp: prop => shouldForwardProp(prop) || prop === 'classes'\n}, {\n  name: 'MuiSwitch',\n  slot: 'SwitchBase'\n})(({\n  theme\n}) => ({\n  /* Styles applied to the internal `SwitchBase` component's `root` class. */\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  zIndex: 1,\n  // Render above the focus ripple.\n  color: theme.palette.mode === 'light' ? theme.palette.common.white : theme.palette.grey[300],\n  transition: theme.transitions.create(['left', 'transform'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  '&.Mui-checked': {\n    transform: 'translateX(20px)'\n  },\n  '&.Mui-disabled': {\n    color: theme.palette.mode === 'light' ? theme.palette.grey[100] : theme.palette.grey[600]\n  },\n  [`&.Mui-checked + .${switchClasses.track}`]: {\n    opacity: 0.5\n  },\n  [`&.Mui-disabled + .${switchClasses.track}`]: {\n    opacity: theme.palette.mode === 'light' ? 0.12 : 0.2\n  },\n  [`& .${switchClasses.input}`]: {\n    /* Styles applied to the internal SwitchBase component's input element. */\n    left: '-100%',\n    width: '300%'\n  }\n}), ({\n  theme,\n  styleProps\n}) => _extends({}, styleProps.color !== 'default' && {\n  '&.Mui-checked': {\n    color: theme.palette[styleProps.color].main,\n    '&:hover': {\n      backgroundColor: alpha(theme.palette[styleProps.color].main, theme.palette.action.hoverOpacity),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    '&.Mui-disabled': {\n      color: theme.palette.mode === 'light' ? lighten(theme.palette[styleProps.color].main, 0.62) : darken(theme.palette[styleProps.color].main, 0.55)\n    }\n  },\n  [`&.Mui-checked + .${switchClasses.track}`]: {\n    backgroundColor: theme.palette[styleProps.color].main\n  }\n}));\nconst SwitchTrack = experimentalStyled('span', {}, {\n  name: 'MuiSwitch',\n  slot: 'Track'\n})(({\n  theme\n}) => ({\n  /* Styles applied to the track element. */\n  height: '100%',\n  width: '100%',\n  borderRadius: 14 / 2,\n  zIndex: -1,\n  transition: theme.transitions.create(['opacity', 'background-color'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  backgroundColor: theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white,\n  opacity: theme.palette.mode === 'light' ? 0.38 : 0.3\n}));\nconst SwitchThumb = experimentalStyled('span', {}, {\n  name: 'MuiSwitch',\n  slot: 'Thumb'\n})(({\n  theme\n}) => ({\n  /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n  boxShadow: theme.shadows[1],\n  backgroundColor: 'currentColor',\n  width: 20,\n  height: 20,\n  borderRadius: '50%'\n}));\nconst Switch = /*#__PURE__*/React.forwardRef(function Switch(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSwitch'\n  });\n\n  const {\n    className,\n    color = 'secondary',\n    edge = false,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"color\", \"edge\", \"size\"]);\n\n  const styleProps = _extends({}, props, {\n    color,\n    edge,\n    size\n  });\n\n  const classes = useUtilityClasses(styleProps);\n\n  const icon = /*#__PURE__*/_jsx(SwitchThumb, {\n    className: classes.thumb,\n    styleProps: styleProps\n  });\n\n  return /*#__PURE__*/_jsxs(SwitchRoot, {\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    children: [/*#__PURE__*/_jsx(SwitchSwitchBase, _extends({\n      className: classes.switchBase,\n      type: \"checkbox\",\n      icon: icon,\n      checkedIcon: icon,\n      ref: ref,\n      styleProps: styleProps\n    }, other, {\n      classes: classes\n    })), /*#__PURE__*/_jsx(SwitchTrack, {\n      className: classes.track,\n      styleProps: styleProps\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'secondary'\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense switch styling.\n   * @default 'medium'\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Switch;","map":{"version":3,"sources":["/Users/simranbhamra/Documents/cinemates/node_modules/@material-ui/core/Switch/Switch.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","clsx","refType","deepmerge","unstable_composeClasses","composeClasses","alpha","darken","lighten","capitalize","SwitchBase","useThemeProps","experimentalStyled","shouldForwardProp","switchClasses","getSwitchUtilityClass","jsx","_jsx","jsxs","_jsxs","overridesResolver","props","styles","styleProps","edge","size","switchBase","input","color","thumb","track","root","useUtilityClasses","classes","checked","disabled","slots","composedClasses","SwitchRoot","name","slot","display","width","height","overflow","padding","boxSizing","position","flexShrink","zIndex","verticalAlign","colorAdjust","marginLeft","marginRight","transform","SwitchSwitchBase","prop","theme","top","left","palette","mode","common","white","grey","transition","transitions","create","duration","shortest","opacity","main","backgroundColor","action","hoverOpacity","SwitchTrack","borderRadius","black","SwitchThumb","boxShadow","shadows","Switch","forwardRef","inProps","ref","className","other","icon","children","type","checkedIcon","process","env","NODE_ENV","propTypes","bool","node","object","string","oneOf","defaultChecked","disableRipple","id","inputProps","inputRef","onChange","func","required","sx","value","any"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType, deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { alpha, darken, lighten } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled, { shouldForwardProp } from '../styles/experimentalStyled';\nimport switchClasses, { getSwitchUtilityClass } from './switchClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, styleProps.edge && styles[`edge${capitalize(styleProps.edge)}`], styles[`size${capitalize(styleProps.size)}`], {\n    [`& .${switchClasses.switchBase}`]: _extends({}, styles.switchBase, styles.input, styleProps.color !== 'default' && styles[`color${capitalize(styleProps.color)}`]),\n    [`& .${switchClasses.thumb}`]: styles.thumb,\n    [`& .${switchClasses.track}`]: styles.track\n  }), styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    edge,\n    size,\n    color,\n    checked,\n    disabled\n  } = styleProps;\n  const slots = {\n    root: ['root', edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`],\n    switchBase: ['switchBase', `color${capitalize(color)}`, checked && 'checked', disabled && 'disabled'],\n    thumb: ['thumb'],\n    track: ['track'],\n    input: ['input']\n  };\n  const composedClasses = composeClasses(slots, getSwitchUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst SwitchRoot = experimentalStyled('span', {}, {\n  name: 'MuiSwitch',\n  slot: 'Root',\n  overridesResolver\n})(({\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  display: 'inline-flex',\n  width: 34 + 12 * 2,\n  height: 14 + 12 * 2,\n  overflow: 'hidden',\n  padding: 12,\n  boxSizing: 'border-box',\n  position: 'relative',\n  flexShrink: 0,\n  zIndex: 0,\n  // Reset the stacking context.\n  verticalAlign: 'middle',\n  // For correct alignment with the text.\n  '@media print': {\n    colorAdjust: 'exact'\n  }\n}, styleProps.edge === 'start' && {\n  marginLeft: -8\n}, styleProps.edge === 'end' && {\n  marginRight: -8\n}, styleProps.size === 'small' && {\n  width: 40,\n  height: 24,\n  padding: 7,\n  [`& .${switchClasses.thumb}`]: {\n    width: 16,\n    height: 16\n  },\n  [`& .${switchClasses.switchBase}`]: {\n    padding: 4,\n    '&.Mui-checked': {\n      transform: 'translateX(16px)'\n    }\n  }\n}));\nconst SwitchSwitchBase = experimentalStyled(SwitchBase, {\n  shouldForwardProp: prop => shouldForwardProp(prop) || prop === 'classes'\n}, {\n  name: 'MuiSwitch',\n  slot: 'SwitchBase'\n})(({\n  theme\n}) => ({\n  /* Styles applied to the internal `SwitchBase` component's `root` class. */\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  zIndex: 1,\n  // Render above the focus ripple.\n  color: theme.palette.mode === 'light' ? theme.palette.common.white : theme.palette.grey[300],\n  transition: theme.transitions.create(['left', 'transform'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  '&.Mui-checked': {\n    transform: 'translateX(20px)'\n  },\n  '&.Mui-disabled': {\n    color: theme.palette.mode === 'light' ? theme.palette.grey[100] : theme.palette.grey[600]\n  },\n  [`&.Mui-checked + .${switchClasses.track}`]: {\n    opacity: 0.5\n  },\n  [`&.Mui-disabled + .${switchClasses.track}`]: {\n    opacity: theme.palette.mode === 'light' ? 0.12 : 0.2\n  },\n  [`& .${switchClasses.input}`]: {\n    /* Styles applied to the internal SwitchBase component's input element. */\n    left: '-100%',\n    width: '300%'\n  }\n}), ({\n  theme,\n  styleProps\n}) => _extends({}, styleProps.color !== 'default' && {\n  '&.Mui-checked': {\n    color: theme.palette[styleProps.color].main,\n    '&:hover': {\n      backgroundColor: alpha(theme.palette[styleProps.color].main, theme.palette.action.hoverOpacity),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    '&.Mui-disabled': {\n      color: theme.palette.mode === 'light' ? lighten(theme.palette[styleProps.color].main, 0.62) : darken(theme.palette[styleProps.color].main, 0.55)\n    }\n  },\n  [`&.Mui-checked + .${switchClasses.track}`]: {\n    backgroundColor: theme.palette[styleProps.color].main\n  }\n}));\nconst SwitchTrack = experimentalStyled('span', {}, {\n  name: 'MuiSwitch',\n  slot: 'Track'\n})(({\n  theme\n}) => ({\n  /* Styles applied to the track element. */\n  height: '100%',\n  width: '100%',\n  borderRadius: 14 / 2,\n  zIndex: -1,\n  transition: theme.transitions.create(['opacity', 'background-color'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  backgroundColor: theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white,\n  opacity: theme.palette.mode === 'light' ? 0.38 : 0.3\n}));\nconst SwitchThumb = experimentalStyled('span', {}, {\n  name: 'MuiSwitch',\n  slot: 'Thumb'\n})(({\n  theme\n}) => ({\n  /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n  boxShadow: theme.shadows[1],\n  backgroundColor: 'currentColor',\n  width: 20,\n  height: 20,\n  borderRadius: '50%'\n}));\nconst Switch = /*#__PURE__*/React.forwardRef(function Switch(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSwitch'\n  });\n\n  const {\n    className,\n    color = 'secondary',\n    edge = false,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"color\", \"edge\", \"size\"]);\n\n  const styleProps = _extends({}, props, {\n    color,\n    edge,\n    size\n  });\n\n  const classes = useUtilityClasses(styleProps);\n\n  const icon = /*#__PURE__*/_jsx(SwitchThumb, {\n    className: classes.thumb,\n    styleProps: styleProps\n  });\n\n  return /*#__PURE__*/_jsxs(SwitchRoot, {\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    children: [/*#__PURE__*/_jsx(SwitchSwitchBase, _extends({\n      className: classes.switchBase,\n      type: \"checkbox\",\n      icon: icon,\n      checkedIcon: icon,\n      ref: ref,\n      styleProps: styleProps\n    }, other, {\n      classes: classes\n    })), /*#__PURE__*/_jsx(SwitchTrack, {\n      className: classes.track,\n      styleProps: styleProps\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'secondary'\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense switch styling.\n   * @default 'medium'\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Switch;"]},"metadata":{},"sourceType":"module"}