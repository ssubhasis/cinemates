{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { deepmerge, HTMLElementType } from '@material-ui/utils';\nimport MenuList from '../MenuList';\nimport Paper from '../Paper';\nimport Popover from '../Popover';\nimport experimentalStyled, { shouldForwardProp } from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport setRef from '../utils/setRef';\nimport menuClasses, { getMenuUtilityClass } from './menuClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RTL_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'right'\n};\nconst LTR_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'left'\n};\n\nconst overridesResolver = (props, styles) => {\n  return deepmerge({\n    [`& .${menuClasses.paper}`]: styles.paper,\n    [`& .${menuClasses.list}`]: styles.list\n  }, styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root'],\n    paper: ['paper'],\n    list: ['list']\n  };\n  return composeClasses(slots, getMenuUtilityClass, classes);\n};\n\nconst MenuRoot = experimentalStyled(Popover, {\n  shouldForwardProp: prop => shouldForwardProp(prop) || prop === 'classes'\n}, {\n  name: 'MuiMenu',\n  slot: 'Root',\n  overridesResolver\n})({});\nconst MenuPaper = experimentalStyled(Paper, {}, {\n  name: 'MuiMenu',\n  slot: 'Paper'\n})({\n  // specZ: The maximum height of a simple menu should be one or more rows less than the view\n  // height. This ensures a tapable area outside of the simple menu with which to dismiss\n  // the menu.\n  maxHeight: 'calc(100% - 96px)',\n  // Add iOS momentum scrolling.\n  WebkitOverflowScrolling: 'touch'\n});\nconst MenuMenuList = experimentalStyled(MenuList, {}, {\n  name: 'MuiMenu',\n  slot: 'List'\n})({\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0\n});\nconst Menu = /*#__PURE__*/React.forwardRef(function Menu(inProps, ref) {\n  const _useThemeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiMenu'\n  }),\n        {\n    isRtl,\n    theme\n  } = _useThemeProps,\n        props = _objectWithoutPropertiesLoose(_useThemeProps, [\"isRtl\", \"theme\"]);\n\n  const {\n    autoFocus = true,\n    children,\n    disableAutoFocusItem = false,\n    MenuListProps = {},\n    onClose,\n    open,\n    // eslint-disable-next-line react/prop-types\n    PaperProps = {},\n    PopoverClasses,\n    transitionDuration = 'auto',\n    TransitionProps: {\n      onEntering\n    } = {},\n    variant = 'selectedMenu'\n  } = props,\n        TransitionProps = _objectWithoutPropertiesLoose(props.TransitionProps, [\"onEntering\"]),\n        other = _objectWithoutPropertiesLoose(props, [\"autoFocus\", \"children\", \"disableAutoFocusItem\", \"MenuListProps\", \"onClose\", \"open\", \"PaperProps\", \"PopoverClasses\", \"transitionDuration\", \"TransitionProps\", \"variant\"]);\n\n  const styleProps = _extends({}, props, {\n    autoFocus,\n    disableAutoFocusItem,\n    MenuListProps,\n    onEntering,\n    PaperProps,\n    transitionDuration,\n    TransitionProps,\n    variant\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  const autoFocusItem = autoFocus && !disableAutoFocusItem && open;\n  const menuListActionsRef = React.useRef(null);\n  const contentAnchorRef = React.useRef(null);\n\n  const handleEntering = (element, isAppearing) => {\n    if (menuListActionsRef.current) {\n      menuListActionsRef.current.adjustStyleForScrollbar(element, theme);\n    }\n\n    if (onEntering) {\n      onEntering(element, isAppearing);\n    }\n  };\n\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n\n      if (onClose) {\n        onClose(event, 'tabKeyDown');\n      }\n    }\n  };\n  /**\n   * the index of the item should receive focus\n   * in a `variant=\"selectedMenu\"` it's the first `selected` item\n   * otherwise it's the very first item.\n   */\n\n\n  let activeItemIndex = -1; // since we inject focus related props into children we have to do a lookahead\n  // to check if there is a `selected` item. We're looking for the last `selected`\n  // item and use the first valid item as a fallback\n\n  React.Children.map(children, (child, index) => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Menu component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    if (!child.props.disabled) {\n      if (variant === 'selectedMenu' && child.props.selected) {\n        activeItemIndex = index;\n      } else if (activeItemIndex === -1) {\n        activeItemIndex = index;\n      }\n    }\n  });\n  const items = React.Children.map(children, (child, index) => {\n    if (index === activeItemIndex) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        ref: instance => {\n          contentAnchorRef.current = instance;\n          setRef(child.ref, instance);\n        }\n      });\n    }\n\n    return child;\n  });\n  return /*#__PURE__*/_jsx(MenuRoot, _extends({\n    getContentAnchorEl: () => contentAnchorRef.current,\n    classes: PopoverClasses,\n    onClose: onClose,\n    anchorOrigin: isRtl ? RTL_ORIGIN : LTR_ORIGIN,\n    transformOrigin: isRtl ? RTL_ORIGIN : LTR_ORIGIN,\n    PaperProps: _extends({\n      component: MenuPaper\n    }, PaperProps, {\n      classes: _extends({}, PaperProps.classes, {\n        root: classes.paper\n      })\n    }),\n    className: classes.root,\n    open: open,\n    ref: ref,\n    transitionDuration: transitionDuration,\n    TransitionProps: _extends({\n      onEntering: handleEntering\n    }, TransitionProps),\n    styleProps: styleProps\n  }, other, {\n    children: /*#__PURE__*/_jsx(MenuMenuList, _extends({\n      onKeyDown: handleListKeyDown,\n      actions: menuListActionsRef,\n      autoFocus: autoFocus && (activeItemIndex === -1 || disableAutoFocusItem),\n      autoFocusItem: autoFocusItem,\n      variant: variant\n    }, MenuListProps, {\n      className: clsx(classes.list, MenuListProps.className),\n      children: items\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Menu.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * An HTML element, or a function that returns one.\n   * It's used to set the position of the menu.\n   */\n  anchorEl: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.func]),\n\n  /**\n   * If `true` (Default) will focus the `[role=\"menu\"]` if no focusable child is found. Disabled\n   * children are not focusable. If you set this prop to `false` focus will be placed\n   * on the parent modal container. This has severe accessibility implications\n   * and should only be considered if you manage focus otherwise.\n   * @default true\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * Menu contents, normally `MenuItem`s.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * When opening the menu will not focus the active item but the `[role=\"menu\"]`\n   * unless `autoFocus` is also set to `false`. Not using the default means not\n   * following WAI-ARIA authoring practices. Please be considerate about possible\n   * accessibility implications.\n   * @default false\n   */\n  disableAutoFocusItem: PropTypes.bool,\n\n  /**\n   * Props applied to the [`MenuList`](/api/menu-list/) element.\n   * @default {}\n   */\n  MenuListProps: PropTypes.object,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`, `\"tabKeyDown\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * `classes` prop applied to the [`Popover`](/api/popover/) element.\n   */\n  PopoverClasses: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The length of the transition in `ms`, or 'auto'\n   * @default 'auto'\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.\n   * @default {}\n   */\n  TransitionProps: PropTypes.object,\n\n  /**\n   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus\n   * and the vertical alignment relative to the anchor element.\n   * @default 'selectedMenu'\n   */\n  variant: PropTypes.oneOf(['menu', 'selectedMenu'])\n} : void 0;\nexport default Menu;","map":{"version":3,"sources":["/Users/simranbhamra/Documents/cinemates/node_modules/@material-ui/core/Menu/Menu.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","isFragment","PropTypes","clsx","unstable_composeClasses","composeClasses","deepmerge","HTMLElementType","MenuList","Paper","Popover","experimentalStyled","shouldForwardProp","useThemeProps","setRef","menuClasses","getMenuUtilityClass","jsx","_jsx","RTL_ORIGIN","vertical","horizontal","LTR_ORIGIN","overridesResolver","props","styles","paper","list","root","useUtilityClasses","styleProps","classes","slots","MenuRoot","prop","name","slot","MenuPaper","maxHeight","WebkitOverflowScrolling","MenuMenuList","outline","Menu","forwardRef","inProps","ref","_useThemeProps","isRtl","theme","autoFocus","children","disableAutoFocusItem","MenuListProps","onClose","open","PaperProps","PopoverClasses","transitionDuration","TransitionProps","onEntering","variant","other","autoFocusItem","menuListActionsRef","useRef","contentAnchorRef","handleEntering","element","isAppearing","current","adjustStyleForScrollbar","handleListKeyDown","event","key","preventDefault","activeItemIndex","Children","map","child","index","isValidElement","process","env","NODE_ENV","console","error","join","disabled","selected","items","cloneElement","instance","getContentAnchorEl","anchorOrigin","transformOrigin","component","className","onKeyDown","actions","propTypes","anchorEl","oneOfType","func","bool","node","object","isRequired","sx","oneOf","number","shape","appear","enter","exit"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { deepmerge, HTMLElementType } from '@material-ui/utils';\nimport MenuList from '../MenuList';\nimport Paper from '../Paper';\nimport Popover from '../Popover';\nimport experimentalStyled, { shouldForwardProp } from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport setRef from '../utils/setRef';\nimport menuClasses, { getMenuUtilityClass } from './menuClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RTL_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'right'\n};\nconst LTR_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'left'\n};\n\nconst overridesResolver = (props, styles) => {\n  return deepmerge({\n    [`& .${menuClasses.paper}`]: styles.paper,\n    [`& .${menuClasses.list}`]: styles.list\n  }, styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root'],\n    paper: ['paper'],\n    list: ['list']\n  };\n  return composeClasses(slots, getMenuUtilityClass, classes);\n};\n\nconst MenuRoot = experimentalStyled(Popover, {\n  shouldForwardProp: prop => shouldForwardProp(prop) || prop === 'classes'\n}, {\n  name: 'MuiMenu',\n  slot: 'Root',\n  overridesResolver\n})({});\nconst MenuPaper = experimentalStyled(Paper, {}, {\n  name: 'MuiMenu',\n  slot: 'Paper'\n})({\n  // specZ: The maximum height of a simple menu should be one or more rows less than the view\n  // height. This ensures a tapable area outside of the simple menu with which to dismiss\n  // the menu.\n  maxHeight: 'calc(100% - 96px)',\n  // Add iOS momentum scrolling.\n  WebkitOverflowScrolling: 'touch'\n});\nconst MenuMenuList = experimentalStyled(MenuList, {}, {\n  name: 'MuiMenu',\n  slot: 'List'\n})({\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0\n});\nconst Menu = /*#__PURE__*/React.forwardRef(function Menu(inProps, ref) {\n  const _useThemeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiMenu'\n  }),\n        {\n    isRtl,\n    theme\n  } = _useThemeProps,\n        props = _objectWithoutPropertiesLoose(_useThemeProps, [\"isRtl\", \"theme\"]);\n\n  const {\n    autoFocus = true,\n    children,\n    disableAutoFocusItem = false,\n    MenuListProps = {},\n    onClose,\n    open,\n    // eslint-disable-next-line react/prop-types\n    PaperProps = {},\n    PopoverClasses,\n    transitionDuration = 'auto',\n    TransitionProps: {\n      onEntering\n    } = {},\n    variant = 'selectedMenu'\n  } = props,\n        TransitionProps = _objectWithoutPropertiesLoose(props.TransitionProps, [\"onEntering\"]),\n        other = _objectWithoutPropertiesLoose(props, [\"autoFocus\", \"children\", \"disableAutoFocusItem\", \"MenuListProps\", \"onClose\", \"open\", \"PaperProps\", \"PopoverClasses\", \"transitionDuration\", \"TransitionProps\", \"variant\"]);\n\n  const styleProps = _extends({}, props, {\n    autoFocus,\n    disableAutoFocusItem,\n    MenuListProps,\n    onEntering,\n    PaperProps,\n    transitionDuration,\n    TransitionProps,\n    variant\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  const autoFocusItem = autoFocus && !disableAutoFocusItem && open;\n  const menuListActionsRef = React.useRef(null);\n  const contentAnchorRef = React.useRef(null);\n\n  const handleEntering = (element, isAppearing) => {\n    if (menuListActionsRef.current) {\n      menuListActionsRef.current.adjustStyleForScrollbar(element, theme);\n    }\n\n    if (onEntering) {\n      onEntering(element, isAppearing);\n    }\n  };\n\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n\n      if (onClose) {\n        onClose(event, 'tabKeyDown');\n      }\n    }\n  };\n  /**\n   * the index of the item should receive focus\n   * in a `variant=\"selectedMenu\"` it's the first `selected` item\n   * otherwise it's the very first item.\n   */\n\n\n  let activeItemIndex = -1; // since we inject focus related props into children we have to do a lookahead\n  // to check if there is a `selected` item. We're looking for the last `selected`\n  // item and use the first valid item as a fallback\n\n  React.Children.map(children, (child, index) => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Menu component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    if (!child.props.disabled) {\n      if (variant === 'selectedMenu' && child.props.selected) {\n        activeItemIndex = index;\n      } else if (activeItemIndex === -1) {\n        activeItemIndex = index;\n      }\n    }\n  });\n  const items = React.Children.map(children, (child, index) => {\n    if (index === activeItemIndex) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        ref: instance => {\n          contentAnchorRef.current = instance;\n          setRef(child.ref, instance);\n        }\n      });\n    }\n\n    return child;\n  });\n  return /*#__PURE__*/_jsx(MenuRoot, _extends({\n    getContentAnchorEl: () => contentAnchorRef.current,\n    classes: PopoverClasses,\n    onClose: onClose,\n    anchorOrigin: isRtl ? RTL_ORIGIN : LTR_ORIGIN,\n    transformOrigin: isRtl ? RTL_ORIGIN : LTR_ORIGIN,\n    PaperProps: _extends({\n      component: MenuPaper\n    }, PaperProps, {\n      classes: _extends({}, PaperProps.classes, {\n        root: classes.paper\n      })\n    }),\n    className: classes.root,\n    open: open,\n    ref: ref,\n    transitionDuration: transitionDuration,\n    TransitionProps: _extends({\n      onEntering: handleEntering\n    }, TransitionProps),\n    styleProps: styleProps\n  }, other, {\n    children: /*#__PURE__*/_jsx(MenuMenuList, _extends({\n      onKeyDown: handleListKeyDown,\n      actions: menuListActionsRef,\n      autoFocus: autoFocus && (activeItemIndex === -1 || disableAutoFocusItem),\n      autoFocusItem: autoFocusItem,\n      variant: variant\n    }, MenuListProps, {\n      className: clsx(classes.list, MenuListProps.className),\n      children: items\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Menu.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * An HTML element, or a function that returns one.\n   * It's used to set the position of the menu.\n   */\n  anchorEl: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.func]),\n\n  /**\n   * If `true` (Default) will focus the `[role=\"menu\"]` if no focusable child is found. Disabled\n   * children are not focusable. If you set this prop to `false` focus will be placed\n   * on the parent modal container. This has severe accessibility implications\n   * and should only be considered if you manage focus otherwise.\n   * @default true\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * Menu contents, normally `MenuItem`s.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * When opening the menu will not focus the active item but the `[role=\"menu\"]`\n   * unless `autoFocus` is also set to `false`. Not using the default means not\n   * following WAI-ARIA authoring practices. Please be considerate about possible\n   * accessibility implications.\n   * @default false\n   */\n  disableAutoFocusItem: PropTypes.bool,\n\n  /**\n   * Props applied to the [`MenuList`](/api/menu-list/) element.\n   * @default {}\n   */\n  MenuListProps: PropTypes.object,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`, `\"tabKeyDown\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * `classes` prop applied to the [`Popover`](/api/popover/) element.\n   */\n  PopoverClasses: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The length of the transition in `ms`, or 'auto'\n   * @default 'auto'\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.\n   * @default {}\n   */\n  TransitionProps: PropTypes.object,\n\n  /**\n   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus\n   * and the vertical alignment relative to the anchor element.\n   * @default 'selectedMenu'\n   */\n  variant: PropTypes.oneOf(['menu', 'selectedMenu'])\n} : void 0;\nexport default Menu;"]},"metadata":{},"sourceType":"module"}