{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Person from '../internal/svg-icons/Person';\nimport avatarClasses, { getAvatarUtilityClass } from './avatarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, styles[styleProps.variant], styleProps.colorDefault && styles.colorDefault, {\n    [`& .${avatarClasses.img}`]: styles.img,\n    [`& .${avatarClasses.fallback}`]: styles.fallback\n  }), styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    variant,\n    colorDefault\n  } = styleProps;\n  const slots = {\n    root: ['root', variant, colorDefault && 'colorDefault'],\n    img: ['img'],\n    fallback: ['fallback']\n  };\n  return composeClasses(slots, getAvatarUtilityClass, classes);\n};\n\nconst AvatarRoot = experimentalStyled('div', {}, {\n  name: 'MuiAvatar',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexShrink: 0,\n  width: 40,\n  height: 40,\n  fontFamily: theme.typography.fontFamily,\n  fontSize: theme.typography.pxToRem(20),\n  lineHeight: 1,\n  borderRadius: '50%',\n  overflow: 'hidden',\n  userSelect: 'none'\n}, styleProps.variant === 'rounded' && {\n  borderRadius: theme.shape.borderRadius\n}, styleProps.variant === 'square' && {\n  borderRadius: 0\n}, styleProps.colorDefault && {\n  color: theme.palette.background.default,\n  backgroundColor: theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n}));\nconst AvatarImg = experimentalStyled('img', {}, {\n  name: 'MuiAvatar',\n  slot: 'Img'\n})({\n  width: '100%',\n  height: '100%',\n  textAlign: 'center',\n  // Handle non-square image. The property isn't supported by IE11.\n  objectFit: 'cover',\n  // Hide alt text.\n  color: 'transparent',\n  // Hide the image broken icon, only works on Chrome.\n  textIndent: 10000\n});\nconst AvatarFallback = experimentalStyled(Person, {}, {\n  name: 'MuiAvatar',\n  slot: 'Fallback'\n})({\n  width: '75%',\n  height: '75%'\n});\n\nfunction useLoaded({\n  src,\n  srcSet\n}) {\n  const [loaded, setLoaded] = React.useState(false);\n  React.useEffect(() => {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    let active = true;\n    const image = new Image();\n    image.src = src;\n\n    if (srcSet) {\n      image.srcset = srcSet;\n    }\n\n    image.onload = () => {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = () => {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return () => {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nconst Avatar = /*#__PURE__*/React.forwardRef(function Avatar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAvatar'\n  });\n\n  const {\n    alt,\n    children: childrenProp,\n    className,\n    component = 'div',\n    imgProps,\n    sizes,\n    src,\n    srcSet,\n    variant = 'circular'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"alt\", \"children\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  let children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  const loaded = useLoaded({\n    src,\n    srcSet\n  });\n  const hasImg = src || srcSet;\n  const hasImgNotFailing = hasImg && loaded !== 'error';\n\n  const styleProps = _extends({}, props, {\n    colorDefault: !hasImgNotFailing,\n    component,\n    variant\n  });\n\n  const classes = useUtilityClasses(styleProps);\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/_jsx(AvatarImg, _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      styleProps: styleProps,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/_jsx(AvatarFallback, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/_jsx(AvatarRoot, _extends({\n    as: component,\n    styleProps: styleProps,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes\">Attributes</a> applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The shape of the avatar.\n   * @default 'circular'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default Avatar;","map":{"version":3,"sources":["/Users/simranbhamra/Documents/cinemates/node_modules/@material-ui/core/Avatar/Avatar.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","clsx","deepmerge","unstable_composeClasses","composeClasses","experimentalStyled","useThemeProps","Person","avatarClasses","getAvatarUtilityClass","jsx","_jsx","overridesResolver","props","styles","styleProps","variant","colorDefault","img","fallback","root","useUtilityClasses","classes","slots","AvatarRoot","name","slot","theme","position","display","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","shape","color","palette","background","default","backgroundColor","mode","grey","AvatarImg","textAlign","objectFit","textIndent","AvatarFallback","useLoaded","src","srcSet","loaded","setLoaded","useState","useEffect","undefined","active","image","Image","srcset","onload","onerror","Avatar","forwardRef","inProps","ref","alt","children","childrenProp","className","component","imgProps","sizes","other","hasImg","hasImgNotFailing","as","process","env","NODE_ENV","propTypes","string","node","object","elementType","sx","oneOfType","oneOf"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Person from '../internal/svg-icons/Person';\nimport avatarClasses, { getAvatarUtilityClass } from './avatarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, styles[styleProps.variant], styleProps.colorDefault && styles.colorDefault, {\n    [`& .${avatarClasses.img}`]: styles.img,\n    [`& .${avatarClasses.fallback}`]: styles.fallback\n  }), styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    variant,\n    colorDefault\n  } = styleProps;\n  const slots = {\n    root: ['root', variant, colorDefault && 'colorDefault'],\n    img: ['img'],\n    fallback: ['fallback']\n  };\n  return composeClasses(slots, getAvatarUtilityClass, classes);\n};\n\nconst AvatarRoot = experimentalStyled('div', {}, {\n  name: 'MuiAvatar',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexShrink: 0,\n  width: 40,\n  height: 40,\n  fontFamily: theme.typography.fontFamily,\n  fontSize: theme.typography.pxToRem(20),\n  lineHeight: 1,\n  borderRadius: '50%',\n  overflow: 'hidden',\n  userSelect: 'none'\n}, styleProps.variant === 'rounded' && {\n  borderRadius: theme.shape.borderRadius\n}, styleProps.variant === 'square' && {\n  borderRadius: 0\n}, styleProps.colorDefault && {\n  color: theme.palette.background.default,\n  backgroundColor: theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n}));\nconst AvatarImg = experimentalStyled('img', {}, {\n  name: 'MuiAvatar',\n  slot: 'Img'\n})({\n  width: '100%',\n  height: '100%',\n  textAlign: 'center',\n  // Handle non-square image. The property isn't supported by IE11.\n  objectFit: 'cover',\n  // Hide alt text.\n  color: 'transparent',\n  // Hide the image broken icon, only works on Chrome.\n  textIndent: 10000\n});\nconst AvatarFallback = experimentalStyled(Person, {}, {\n  name: 'MuiAvatar',\n  slot: 'Fallback'\n})({\n  width: '75%',\n  height: '75%'\n});\n\nfunction useLoaded({\n  src,\n  srcSet\n}) {\n  const [loaded, setLoaded] = React.useState(false);\n  React.useEffect(() => {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    let active = true;\n    const image = new Image();\n    image.src = src;\n\n    if (srcSet) {\n      image.srcset = srcSet;\n    }\n\n    image.onload = () => {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = () => {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return () => {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nconst Avatar = /*#__PURE__*/React.forwardRef(function Avatar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAvatar'\n  });\n\n  const {\n    alt,\n    children: childrenProp,\n    className,\n    component = 'div',\n    imgProps,\n    sizes,\n    src,\n    srcSet,\n    variant = 'circular'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"alt\", \"children\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  let children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  const loaded = useLoaded({\n    src,\n    srcSet\n  });\n  const hasImg = src || srcSet;\n  const hasImgNotFailing = hasImg && loaded !== 'error';\n\n  const styleProps = _extends({}, props, {\n    colorDefault: !hasImgNotFailing,\n    component,\n    variant\n  });\n\n  const classes = useUtilityClasses(styleProps);\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/_jsx(AvatarImg, _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      styleProps: styleProps,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/_jsx(AvatarFallback, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/_jsx(AvatarRoot, _extends({\n    as: component,\n    styleProps: styleProps,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes\">Attributes</a> applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The shape of the avatar.\n   * @default 'circular'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default Avatar;"]},"metadata":{},"sourceType":"module"}