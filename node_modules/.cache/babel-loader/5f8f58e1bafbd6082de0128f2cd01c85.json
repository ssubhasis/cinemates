{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport { isHorizontal } from '../Drawer/Drawer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    zIndex: theme.zIndex.drawer - 1\n  },\n  anchorLeft: {\n    right: 'auto'\n  },\n  anchorRight: {\n    left: 'auto',\n    right: 0\n  },\n  anchorTop: {\n    bottom: 'auto',\n    right: 0\n  },\n  anchorBottom: {\n    top: 'auto',\n    bottom: 0,\n    right: 0\n  }\n});\n/**\n * @ignore - internal component.\n */\n\nconst SwipeArea = /*#__PURE__*/React.forwardRef(function SwipeArea(props, ref) {\n  const {\n    anchor,\n    classes,\n    className,\n    width\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"anchor\", \"classes\", \"className\", \"width\"]);\n\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    className: clsx(classes.root, classes[`anchor${capitalize(anchor)}`], className),\n    ref: ref,\n    style: {\n      [isHorizontal(anchor) ? 'width' : 'height']: width\n    }\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeArea.propTypes = {\n  /**\n   * Side on which to attach the discovery area.\n   */\n  anchor: PropTypes.oneOf(['left', 'top', 'right', 'bottom']).isRequired,\n\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The width of the left most (or right most) area in `px` where the\n   * drawer can be swiped open from.\n   */\n  width: PropTypes.number.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwipeArea'\n})(SwipeArea);","map":{"version":3,"sources":["/Users/simranbhamra/Documents/cinemates/node_modules/@material-ui/core/SwipeableDrawer/SwipeArea.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","clsx","withStyles","capitalize","isHorizontal","jsx","_jsx","styles","theme","root","position","top","left","bottom","zIndex","drawer","anchorLeft","right","anchorRight","anchorTop","anchorBottom","SwipeArea","forwardRef","props","ref","anchor","classes","className","width","other","style","process","env","NODE_ENV","propTypes","oneOf","isRequired","object","string","number","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport { isHorizontal } from '../Drawer/Drawer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    zIndex: theme.zIndex.drawer - 1\n  },\n  anchorLeft: {\n    right: 'auto'\n  },\n  anchorRight: {\n    left: 'auto',\n    right: 0\n  },\n  anchorTop: {\n    bottom: 'auto',\n    right: 0\n  },\n  anchorBottom: {\n    top: 'auto',\n    bottom: 0,\n    right: 0\n  }\n});\n/**\n * @ignore - internal component.\n */\n\nconst SwipeArea = /*#__PURE__*/React.forwardRef(function SwipeArea(props, ref) {\n  const {\n    anchor,\n    classes,\n    className,\n    width\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"anchor\", \"classes\", \"className\", \"width\"]);\n\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    className: clsx(classes.root, classes[`anchor${capitalize(anchor)}`], className),\n    ref: ref,\n    style: {\n      [isHorizontal(anchor) ? 'width' : 'height']: width\n    }\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeArea.propTypes = {\n  /**\n   * Side on which to attach the discovery area.\n   */\n  anchor: PropTypes.oneOf(['left', 'top', 'right', 'bottom']).isRequired,\n\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The width of the left most (or right most) area in `px` where the\n   * drawer can be swiped open from.\n   */\n  width: PropTypes.number.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwipeArea'\n})(SwipeArea);"]},"metadata":{},"sourceType":"module"}