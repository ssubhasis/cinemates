{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport cardActionAreaClasses, { getCardActionAreaUtilityClass } from './cardActionAreaClasses';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  return deepmerge({\n    [`& .${cardActionAreaClasses.focusHighlight}`]: styles.focusHighlight\n  }, styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root'],\n    focusHighlight: ['focusHighlight']\n  };\n  return composeClasses(slots, getCardActionAreaUtilityClass, classes);\n};\n\nconst CardActionAreaRoot = experimentalStyled(ButtonBase, {}, {\n  name: 'MuiCardActionArea',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme\n}) => ({\n  /* Styles applied to the root element. */\n  display: 'block',\n  textAlign: 'inherit',\n  width: '100%',\n  [`&:hover .${cardActionAreaClasses.focusHighlight}`]: {\n    opacity: theme.palette.action.hoverOpacity,\n    '@media (hover: none)': {\n      opacity: 0\n    }\n  },\n  [`&.Mui-focusVisible .${cardActionAreaClasses.focusHighlight}`]: {\n    opacity: theme.palette.action.focusOpacity\n  }\n}));\nconst CardActionAreaFocusHighlight = experimentalStyled('span', {}, {\n  name: 'MuiCardActionArea',\n  slot: 'FocusHighlight'\n})(({\n  theme\n}) => ({\n  /* Styles applied to the overlay that covers the action area when it is keyboard focused. */\n  overflow: 'hidden',\n  pointerEvents: 'none',\n  position: 'absolute',\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  borderRadius: 'inherit',\n  opacity: 0,\n  backgroundColor: 'currentcolor',\n  transition: theme.transitions.create('opacity', {\n    duration: theme.transitions.duration.short\n  })\n}));\nconst CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActionArea'\n  });\n\n  const {\n    children,\n    className,\n    focusVisibleClassName\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"focusVisibleClassName\"]); // TODO: convert to simple assignment after the type error in defaultPropsHandler.js:60:6 is fixed\n\n\n  const styleProps = _extends({}, props);\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsxs(CardActionAreaRoot, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref,\n    styleProps: styleProps\n  }, other, {\n    children: [children, /*#__PURE__*/_jsx(CardActionAreaFocusHighlight, {\n      className: classes.focusHighlight,\n      styleProps: styleProps\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default CardActionArea;","map":{"version":3,"sources":["/Users/simranbhamra/Documents/cinemates/node_modules/@material-ui/core/CardActionArea/CardActionArea.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","clsx","deepmerge","unstable_composeClasses","composeClasses","useThemeProps","experimentalStyled","cardActionAreaClasses","getCardActionAreaUtilityClass","ButtonBase","jsx","_jsx","jsxs","_jsxs","overridesResolver","props","styles","focusHighlight","root","useUtilityClasses","styleProps","classes","slots","CardActionAreaRoot","name","slot","theme","display","textAlign","width","opacity","palette","action","hoverOpacity","focusOpacity","CardActionAreaFocusHighlight","overflow","pointerEvents","position","top","right","bottom","left","borderRadius","backgroundColor","transition","transitions","create","duration","short","CardActionArea","forwardRef","inProps","ref","children","className","focusVisibleClassName","other","focusVisible","process","env","NODE_ENV","propTypes","node","object","string","sx"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport cardActionAreaClasses, { getCardActionAreaUtilityClass } from './cardActionAreaClasses';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  return deepmerge({\n    [`& .${cardActionAreaClasses.focusHighlight}`]: styles.focusHighlight\n  }, styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root'],\n    focusHighlight: ['focusHighlight']\n  };\n  return composeClasses(slots, getCardActionAreaUtilityClass, classes);\n};\n\nconst CardActionAreaRoot = experimentalStyled(ButtonBase, {}, {\n  name: 'MuiCardActionArea',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme\n}) => ({\n  /* Styles applied to the root element. */\n  display: 'block',\n  textAlign: 'inherit',\n  width: '100%',\n  [`&:hover .${cardActionAreaClasses.focusHighlight}`]: {\n    opacity: theme.palette.action.hoverOpacity,\n    '@media (hover: none)': {\n      opacity: 0\n    }\n  },\n  [`&.Mui-focusVisible .${cardActionAreaClasses.focusHighlight}`]: {\n    opacity: theme.palette.action.focusOpacity\n  }\n}));\nconst CardActionAreaFocusHighlight = experimentalStyled('span', {}, {\n  name: 'MuiCardActionArea',\n  slot: 'FocusHighlight'\n})(({\n  theme\n}) => ({\n  /* Styles applied to the overlay that covers the action area when it is keyboard focused. */\n  overflow: 'hidden',\n  pointerEvents: 'none',\n  position: 'absolute',\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  borderRadius: 'inherit',\n  opacity: 0,\n  backgroundColor: 'currentcolor',\n  transition: theme.transitions.create('opacity', {\n    duration: theme.transitions.duration.short\n  })\n}));\nconst CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActionArea'\n  });\n\n  const {\n    children,\n    className,\n    focusVisibleClassName\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"focusVisibleClassName\"]); // TODO: convert to simple assignment after the type error in defaultPropsHandler.js:60:6 is fixed\n\n\n  const styleProps = _extends({}, props);\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsxs(CardActionAreaRoot, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref,\n    styleProps: styleProps\n  }, other, {\n    children: [children, /*#__PURE__*/_jsx(CardActionAreaFocusHighlight, {\n      className: classes.focusHighlight,\n      styleProps: styleProps\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default CardActionArea;"]},"metadata":{},"sourceType":"module"}