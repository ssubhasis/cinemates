{"ast":null,"code":"import _toConsumableArray from \"/Users/simranbhamra/Documents/cinemates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport styled from '@material-ui/styled-engine';\nimport { propsToClassKey } from '@material-ui/styles';\nimport { unstable_styleFunctionSx as styleFunctionSx } from '@material-ui/system';\nimport defaultTheme from './defaultTheme';\n\nfunction isEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}\n\nvar getStyleOverrides = function getStyleOverrides(name, theme) {\n  if (theme.components && theme.components[name] && theme.components[name].styleOverrides) {\n    return theme.components[name].styleOverrides;\n  }\n\n  return null;\n};\n\nvar getVariantStyles = function getVariantStyles(name, theme) {\n  var variants = [];\n\n  if (theme && theme.components && theme.components[name] && theme.components[name].variants) {\n    variants = theme.components[name].variants;\n  }\n\n  var variantsStyles = {};\n  variants.forEach(function (definition) {\n    var key = propsToClassKey(definition.props);\n    variantsStyles[key] = definition.style;\n  });\n  return variantsStyles;\n};\n\nvar variantsResolver = function variantsResolver(props, styles, theme, name) {\n  var _theme$components, _theme$components$nam;\n\n  var _props$styleProps = props.styleProps,\n      styleProps = _props$styleProps === void 0 ? {} : _props$styleProps;\n  var variantsStyles = {};\n  var themeVariants = theme === null || theme === void 0 ? void 0 : (_theme$components = theme.components) === null || _theme$components === void 0 ? void 0 : (_theme$components$nam = _theme$components[name]) === null || _theme$components$nam === void 0 ? void 0 : _theme$components$nam.variants;\n\n  if (themeVariants) {\n    themeVariants.forEach(function (themeVariant) {\n      var isMatch = true;\n      Object.keys(themeVariant.props).forEach(function (key) {\n        if (styleProps[key] !== themeVariant.props[key] && props[key] !== themeVariant.props[key]) {\n          isMatch = false;\n        }\n      });\n\n      if (isMatch) {\n        variantsStyles = _extends({}, variantsStyles, styles[propsToClassKey(themeVariant.props)]);\n      }\n    });\n  }\n\n  return variantsStyles;\n};\n\nexport var shouldForwardProp = function shouldForwardProp(prop) {\n  return prop !== 'styleProps' && prop !== 'theme' && prop !== 'isRtl' && prop !== 'sx' && prop !== 'as' && prop !== 'classes';\n};\n\nvar lowercaseFirstLetter = function lowercaseFirstLetter(string) {\n  return string.charAt(0).toLowerCase() + string.slice(1);\n};\n\nvar experimentalStyled = function experimentalStyled(tag, options) {\n  var muiOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var componentName = muiOptions.name;\n  var componentSlot = muiOptions.slot;\n  var overridesResolver = muiOptions.overridesResolver;\n  var skipVariantsResolver = muiOptions.skipVariantsResolver || false;\n  var skipSx = muiOptions.skipSx || false;\n  var displayName;\n  var className;\n\n  if (componentName) {\n    displayName = \"\".concat(componentName).concat(componentSlot || '');\n    className = \"\".concat(componentName, \"-\").concat(lowercaseFirstLetter(componentSlot || 'Root'));\n  }\n\n  var defaultStyledResolver = styled(tag, _extends({\n    shouldForwardProp: shouldForwardProp,\n    label: className || componentName || ''\n  }, options));\n\n  var muiStyledResolver = function muiStyledResolver(styleArg) {\n    for (var _len = arguments.length, expressions = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      expressions[_key - 1] = arguments[_key];\n    }\n\n    var expressionsWithDefaultTheme = expressions ? expressions.map(function (stylesArg) {\n      return typeof stylesArg === 'function' ? function (_ref) {\n        var themeInput = _ref.theme,\n            other = _objectWithoutPropertiesLoose(_ref, [\"theme\"]);\n\n        return stylesArg(_extends({\n          theme: isEmpty(themeInput) ? defaultTheme : themeInput\n        }, other));\n      } : stylesArg;\n    }) : [];\n    var transformedStyleArg = styleArg;\n\n    if (componentName && overridesResolver) {\n      expressionsWithDefaultTheme.push(function (props) {\n        var theme = isEmpty(props.theme) ? defaultTheme : props.theme;\n        var styleOverrides = getStyleOverrides(componentName, theme);\n\n        if (styleOverrides) {\n          return overridesResolver(props, styleOverrides);\n        }\n\n        return null;\n      });\n    }\n\n    if (componentName && overridesResolver && !skipVariantsResolver) {\n      expressionsWithDefaultTheme.push(function (props) {\n        var theme = isEmpty(props.theme) ? defaultTheme : props.theme;\n        return variantsResolver(props, getVariantStyles(componentName, theme), theme, componentName);\n      });\n    }\n\n    if (!skipSx) {\n      expressionsWithDefaultTheme.push(function (props) {\n        var theme = isEmpty(props.theme) ? defaultTheme : props.theme;\n        return styleFunctionSx(_extends({}, props, {\n          theme: theme\n        }));\n      });\n    }\n\n    var numOfCustomFnsApplied = expressionsWithDefaultTheme.length - expressions.length;\n\n    if (Array.isArray(styleArg) && numOfCustomFnsApplied > 0) {\n      var placeholders = new Array(numOfCustomFnsApplied).fill(''); // If the type is array, than we need to add placeholders in the template for the overrides, variants and the sx styles\n\n      transformedStyleArg = [].concat(_toConsumableArray(styleArg), _toConsumableArray(placeholders));\n      transformedStyleArg.raw = [].concat(_toConsumableArray(styleArg.raw), _toConsumableArray(placeholders));\n    } else if (typeof styleArg === 'function') {\n      // If the type is function, we need to define the default theme\n      transformedStyleArg = function transformedStyleArg(_ref2) {\n        var themeInput = _ref2.theme,\n            other = _objectWithoutPropertiesLoose(_ref2, [\"theme\"]);\n\n        return styleArg(_extends({\n          theme: isEmpty(themeInput) ? defaultTheme : themeInput\n        }, other));\n      };\n    }\n\n    var Component = defaultStyledResolver.apply(void 0, [transformedStyleArg].concat(_toConsumableArray(expressionsWithDefaultTheme)));\n\n    if (displayName) {\n      Component.displayName = displayName;\n    }\n\n    return Component;\n  };\n\n  return muiStyledResolver;\n};\n\nexport default experimentalStyled;","map":{"version":3,"sources":["/Users/simranbhamra/Documents/cinemates/node_modules/@material-ui/core/styles/experimentalStyled.js"],"names":["_objectWithoutPropertiesLoose","_extends","styled","propsToClassKey","unstable_styleFunctionSx","styleFunctionSx","defaultTheme","isEmpty","obj","Object","keys","length","getStyleOverrides","name","theme","components","styleOverrides","getVariantStyles","variants","variantsStyles","forEach","definition","key","props","style","variantsResolver","styles","_theme$components","_theme$components$nam","styleProps","themeVariants","themeVariant","isMatch","shouldForwardProp","prop","lowercaseFirstLetter","string","charAt","toLowerCase","slice","experimentalStyled","tag","options","muiOptions","componentName","componentSlot","slot","overridesResolver","skipVariantsResolver","skipSx","displayName","className","defaultStyledResolver","label","muiStyledResolver","styleArg","expressions","expressionsWithDefaultTheme","map","stylesArg","_ref","themeInput","other","transformedStyleArg","push","numOfCustomFnsApplied","Array","isArray","placeholders","fill","raw","_ref2","Component"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport styled from '@material-ui/styled-engine';\nimport { propsToClassKey } from '@material-ui/styles';\nimport { unstable_styleFunctionSx as styleFunctionSx } from '@material-ui/system';\nimport defaultTheme from './defaultTheme';\n\nfunction isEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}\n\nconst getStyleOverrides = (name, theme) => {\n  if (theme.components && theme.components[name] && theme.components[name].styleOverrides) {\n    return theme.components[name].styleOverrides;\n  }\n\n  return null;\n};\n\nconst getVariantStyles = (name, theme) => {\n  let variants = [];\n\n  if (theme && theme.components && theme.components[name] && theme.components[name].variants) {\n    variants = theme.components[name].variants;\n  }\n\n  const variantsStyles = {};\n  variants.forEach(definition => {\n    const key = propsToClassKey(definition.props);\n    variantsStyles[key] = definition.style;\n  });\n  return variantsStyles;\n};\n\nconst variantsResolver = (props, styles, theme, name) => {\n  var _theme$components, _theme$components$nam;\n\n  const {\n    styleProps = {}\n  } = props;\n  let variantsStyles = {};\n  const themeVariants = theme === null || theme === void 0 ? void 0 : (_theme$components = theme.components) === null || _theme$components === void 0 ? void 0 : (_theme$components$nam = _theme$components[name]) === null || _theme$components$nam === void 0 ? void 0 : _theme$components$nam.variants;\n\n  if (themeVariants) {\n    themeVariants.forEach(themeVariant => {\n      let isMatch = true;\n      Object.keys(themeVariant.props).forEach(key => {\n        if (styleProps[key] !== themeVariant.props[key] && props[key] !== themeVariant.props[key]) {\n          isMatch = false;\n        }\n      });\n\n      if (isMatch) {\n        variantsStyles = _extends({}, variantsStyles, styles[propsToClassKey(themeVariant.props)]);\n      }\n    });\n  }\n\n  return variantsStyles;\n};\n\nexport const shouldForwardProp = prop => prop !== 'styleProps' && prop !== 'theme' && prop !== 'isRtl' && prop !== 'sx' && prop !== 'as' && prop !== 'classes';\n\nconst lowercaseFirstLetter = string => {\n  return string.charAt(0).toLowerCase() + string.slice(1);\n};\n\nconst experimentalStyled = (tag, options, muiOptions = {}) => {\n  const componentName = muiOptions.name;\n  const componentSlot = muiOptions.slot;\n  const overridesResolver = muiOptions.overridesResolver;\n  const skipVariantsResolver = muiOptions.skipVariantsResolver || false;\n  const skipSx = muiOptions.skipSx || false;\n  let displayName;\n  let className;\n\n  if (componentName) {\n    displayName = `${componentName}${componentSlot || ''}`;\n    className = `${componentName}-${lowercaseFirstLetter(componentSlot || 'Root')}`;\n  }\n\n  const defaultStyledResolver = styled(tag, _extends({\n    shouldForwardProp,\n    label: className || componentName || ''\n  }, options));\n\n  const muiStyledResolver = (styleArg, ...expressions) => {\n    const expressionsWithDefaultTheme = expressions ? expressions.map(stylesArg => {\n      return typeof stylesArg === 'function' ? (_ref) => {\n        let {\n          theme: themeInput\n        } = _ref,\n            other = _objectWithoutPropertiesLoose(_ref, [\"theme\"]);\n\n        return stylesArg(_extends({\n          theme: isEmpty(themeInput) ? defaultTheme : themeInput\n        }, other));\n      } : stylesArg;\n    }) : [];\n    let transformedStyleArg = styleArg;\n\n    if (componentName && overridesResolver) {\n      expressionsWithDefaultTheme.push(props => {\n        const theme = isEmpty(props.theme) ? defaultTheme : props.theme;\n        const styleOverrides = getStyleOverrides(componentName, theme);\n\n        if (styleOverrides) {\n          return overridesResolver(props, styleOverrides);\n        }\n\n        return null;\n      });\n    }\n\n    if (componentName && overridesResolver && !skipVariantsResolver) {\n      expressionsWithDefaultTheme.push(props => {\n        const theme = isEmpty(props.theme) ? defaultTheme : props.theme;\n        return variantsResolver(props, getVariantStyles(componentName, theme), theme, componentName);\n      });\n    }\n\n    if (!skipSx) {\n      expressionsWithDefaultTheme.push(props => {\n        const theme = isEmpty(props.theme) ? defaultTheme : props.theme;\n        return styleFunctionSx(_extends({}, props, {\n          theme\n        }));\n      });\n    }\n\n    const numOfCustomFnsApplied = expressionsWithDefaultTheme.length - expressions.length;\n\n    if (Array.isArray(styleArg) && numOfCustomFnsApplied > 0) {\n      const placeholders = new Array(numOfCustomFnsApplied).fill(''); // If the type is array, than we need to add placeholders in the template for the overrides, variants and the sx styles\n\n      transformedStyleArg = [...styleArg, ...placeholders];\n      transformedStyleArg.raw = [...styleArg.raw, ...placeholders];\n    } else if (typeof styleArg === 'function') {\n      // If the type is function, we need to define the default theme\n      transformedStyleArg = (_ref2) => {\n        let {\n          theme: themeInput\n        } = _ref2,\n            other = _objectWithoutPropertiesLoose(_ref2, [\"theme\"]);\n\n        return styleArg(_extends({\n          theme: isEmpty(themeInput) ? defaultTheme : themeInput\n        }, other));\n      };\n    }\n\n    const Component = defaultStyledResolver(transformedStyleArg, ...expressionsWithDefaultTheme);\n\n    if (displayName) {\n      Component.displayName = displayName;\n    }\n\n    return Component;\n  };\n\n  return muiStyledResolver;\n};\n\nexport default experimentalStyled;"]},"metadata":{},"sourceType":"module"}