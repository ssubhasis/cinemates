{"ast":null,"code":"import axios from 'axios';\nexport const userLogin = async ({\n  userId,\n  password\n}) => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const body = {\n        \"userId\": userId,\n        \"password\": password\n      }; // searchResults = []\n\n      const API_URL = \"https://teampolaris.web.illinois.edu/user-login\";\n      axios.post(API_URL, body).then(response => {\n        if (userId === response.data.userId && password === response.data.userPassword) {\n          resolve(response.data);\n        } else {\n          reject();\n        }\n      }).catch(error => {\n        reject();\n      });\n    }, 3000);\n  });\n};","map":{"version":3,"sources":["/Users/simranbhamra/Documents/cinemates/src/Components/loginApi.js"],"names":["axios","userLogin","userId","password","Promise","resolve","reject","setTimeout","body","API_URL","post","then","response","data","userPassword","catch","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAG,OAAO;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAP,KAAgC;AACrD,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCC,IAAAA,UAAU,CAAC,MAAM;AACf,YAAMC,IAAI,GAAG;AAAC,kBAASN,MAAV;AACD,oBAAWC;AADV,OAAb,CADe,CAGf;;AACA,YAAMM,OAAO,GAAG,iDAAhB;AACAT,MAAAA,KAAK,CAACU,IAAN,CAAWD,OAAX,EAAoBD,IAApB,EACCG,IADD,CACMC,QAAQ,IAAI;AAAE,YAAIV,MAAM,KAAKU,QAAQ,CAACC,IAAT,CAAcX,MAAzB,IAAmCC,QAAQ,KAAKS,QAAQ,CAACC,IAAT,CAAcC,YAAlE,EAAgF;AAClGT,UAAAA,OAAO,CAACO,QAAQ,CAACC,IAAV,CAAP;AACD,SAFmB,MAEb;AACLP,UAAAA,MAAM;AAAI;AACb,OALC,EAKCS,KALD,CAKQC,KAAD,IAAW;AAACV,QAAAA,MAAM;AAAI,OAL7B;AAMD,KAXS,EAWP,IAXO,CAAV;AAYD,GAbM,CAAP;AAcD,CAfI","sourcesContent":["import axios from 'axios'\n\nexport const userLogin = async ({ userId, password }) => {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const body = {\"userId\":userId,\n                    \"password\":password}\n        // searchResults = []\n        const API_URL = \"https://teampolaris.web.illinois.edu/user-login\"\n        axios.post(API_URL, body)\n        .then(response => { if (userId === response.data.userId && password === response.data.userPassword) {\n          resolve(response.data);\n        } else {\n          reject();}\n      }).catch((error) => {reject();});\n      }, 3000);\n    });\n  };"]},"metadata":{},"sourceType":"module"}