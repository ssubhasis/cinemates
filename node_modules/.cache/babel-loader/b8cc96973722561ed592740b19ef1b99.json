{"ast":null,"code":"var _jsxFileName = \"/Users/simranbhamra/Documents/cinemates/src/Pages/LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Flex, Box, Heading, FormControl, FormLabel, Input, Button, CircularProgress, Text } from '@chakra-ui/react';\nimport { userLogin } from '../Components/loginApi';\nimport ErrorMessage from '../Components/LoginError';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function LoginPage() {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    try {\n      await userLogin({\n        email,\n        password\n      });\n      setIsLoggedIn(true);\n      setIsLoading(false);\n    } catch (error) {\n      setError('Invalid username or password');\n      setIsLoading(false);\n      setEmail('');\n      setPassword('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    width: \"full\",\n    align: \"center\",\n    justifyContent: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      p: 8,\n      maxWidth: \"500px\",\n      borderWidth: 1,\n      borderRadius: 8,\n      boxShadow: \"lg\",\n      children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Box, {\n        textAlign: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: [email, \" logged in!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variantColor: \"orange\",\n          variant: \"outline\",\n          width: \"full\",\n          mt: 4,\n          onClick: () => setIsLoggedIn(false),\n          children: \"Sign out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          textAlign: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Heading, {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          my: 4,\n          textAlign: \"left\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              message: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              isRequired: true,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"email\",\n                placeholder: \"test@test.com\",\n                size: \"lg\",\n                onChange: event => setEmail(event.currentTarget.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              isRequired: true,\n              mt: 6,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"password\",\n                placeholder: \"*******\",\n                size: \"lg\",\n                onChange: event => setPassword(event.currentTarget.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variantColor: \"teal\",\n              variant: \"outline\",\n              type: \"submit\",\n              width: \"full\",\n              mt: 4,\n              children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                isIndeterminate: true,\n                size: \"24px\",\n                color: \"teal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 23\n              }, this) : 'Sign In'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginPage, \"Feytcg2VsuKJ5SNahpj6768tVMQ=\");\n\n_c = LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/Users/simranbhamra/Documents/cinemates/src/Pages/LoginPage.js"],"names":["React","useState","Flex","Box","Heading","FormControl","FormLabel","Input","Button","CircularProgress","Text","userLogin","ErrorMessage","LoginPage","email","setEmail","password","setPassword","error","setError","isLoading","setIsLoading","isLoggedIn","setIsLoggedIn","handleSubmit","event","preventDefault","currentTarget","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {\n    Flex,\n    Box,\n    Heading,\n    FormControl,\n    FormLabel,\n    Input,\n    Button,\n    CircularProgress,\n    Text\n} from '@chakra-ui/react';\nimport {userLogin} from '../Components/loginApi';\nimport ErrorMessage from '../Components/LoginError'; \n\nexport default function LoginPage() {\n\n   \n        const [email, setEmail] = useState('');\n        const [password, setPassword] = useState('');\n        const [error, setError] = useState('');\n        const [isLoading, setIsLoading] = useState(false);\n        const [isLoggedIn, setIsLoggedIn] = useState(false);\n        const handleSubmit = async event => {\n          event.preventDefault();\n          setIsLoading(true);\n          try {\n            await userLogin({ email, password });\n            setIsLoggedIn(true);\n            setIsLoading(false);\n          } catch (error) {\n            setError('Invalid username or password');\n            setIsLoading(false);\n            setEmail('');\n            setPassword('');\n          }\n        };\n      \n       \n\n\n\n    return (\n        <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\n        <Box\n          p={8}\n          maxWidth=\"500px\"\n          borderWidth={1}\n          borderRadius={8}\n          boxShadow=\"lg\"\n        >\n          {isLoggedIn ? (\n            <Box textAlign=\"center\">\n              <Text>{email} logged in!</Text>\n              <Button\n                variantColor=\"orange\"\n                variant=\"outline\"\n                width=\"full\"\n                mt={4}\n                onClick={() => setIsLoggedIn(false)}\n              >\n                Sign out\n              </Button>\n            </Box>\n          ) : (\n            <>\n              <Box textAlign=\"center\">\n                <Heading>Login</Heading>\n              </Box>\n              <Box my={4} textAlign=\"left\">\n                <form onSubmit={handleSubmit}>\n                  {error && <ErrorMessage message={error} />}\n                  <FormControl isRequired>\n                    <FormLabel>Email</FormLabel>\n                    <Input\n                      type=\"email\"\n                      placeholder=\"test@test.com\"\n                      size=\"lg\"\n                      onChange={event => setEmail(event.currentTarget.value)}\n                    />\n                  </FormControl>\n                  <FormControl isRequired mt={6}>\n                    <FormLabel>Password</FormLabel>\n                    <Input\n                      type=\"password\"\n                      placeholder=\"*******\"\n                      size=\"lg\"\n                      onChange={event => setPassword(event.currentTarget.value)}\n                    />\n                  </FormControl>\n                  <Button\n                    variantColor=\"teal\"\n                    variant=\"outline\"\n                    type=\"submit\"\n                    width=\"full\"\n                    mt={4}\n                  >\n                    {isLoading ? (\n                      <CircularProgress\n                        isIndeterminate\n                        size=\"24px\"\n                        color=\"teal\"\n                      />\n                    ) : (\n                      'Sign In'\n                    )}\n                  </Button>\n                </form>\n              </Box>\n            </>\n          )}\n        </Box>\n      </Flex>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}