{"ast":null,"code":"var _jsxFileName = \"/Users/simranbhamra/Documents/cinemates/src/Components/SearchActor.js\";\nimport React, { Component } from 'react';\nimport { Button, ButtonGroup, Input, Grid, Box, SimpleGrid } from \"@chakra-ui/react\";\nimport axios from 'axios';\nimport ActorSuggestions from '../Components/ActorSuggestions';\nimport { withRouter } from 'react-router-dom'; // const { API_KEY } = process.env\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://teampolaris.web.illinois.edu/search-actors';\n\nclass SearchActor extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      query: '',\n      results: [],\n      queryAId: ''\n    };\n\n    this.getInfo = () => {\n      axios.get(`${API_URL}/${this.state.query}`).then(({\n        data\n      }) => {\n        this.setState({\n          results: data\n        });\n      });\n    };\n\n    this.handleInputChange = () => {\n      this.setState({\n        query: this.search.value\n      }, () => {\n        if (this.state.query && this.state.query.length > 1) {\n          if (this.state.query.length % 2 === 0) {\n            this.getInfo();\n          }\n        } else if (!this.state.query) {}\n      });\n    };\n\n    this.onSubmitHandler = e => {\n      e.preventDefault();\n      this.state.results.map(r => {\n        if (r.primaryTitle == this.state.query) {\n          this.state.queryAId = r.AId;\n        }\n\n        ;\n      });\n      window.location.href = \"/#/actor/\" + this.state.queryAId;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.onSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        list: \"browsers\",\n        name: \"browser\",\n        id: \"browser\",\n        style: {\n          marginTop: \"20px\",\n          width: \"75%\",\n          height: \"50px\",\n          borderRadius: \"40px\",\n          marginRight: \"20px\",\n          marginBottom: \"20px\"\n        },\n        focusBorderColor: \"orange.400\",\n        size: \"lg\",\n        bg: \"white\",\n        placeholder: \"Search by actor\",\n        ref: input => this.search = input,\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActorSuggestions, {\n        results: this.state.results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        bgColor: \"primary.200\",\n        variant: \"solid\",\n        type: \"submit\",\n        onClick: this.onSubmitHandler,\n        children: \"Go\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default SearchActor;","map":{"version":3,"sources":["/Users/simranbhamra/Documents/cinemates/src/Components/SearchActor.js"],"names":["React","Component","Button","ButtonGroup","Input","Grid","Box","SimpleGrid","axios","ActorSuggestions","withRouter","API_URL","SearchActor","state","query","results","queryAId","getInfo","get","then","data","setState","handleInputChange","search","value","length","onSubmitHandler","e","preventDefault","map","r","primaryTitle","AId","window","location","href","render","marginTop","width","height","borderRadius","marginRight","marginBottom","input"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {Button, ButtonGroup, Input, Grid, Box, SimpleGrid} from \"@chakra-ui/react\"\nimport axios from 'axios'; \nimport ActorSuggestions from '../Components/ActorSuggestions'; \nimport { withRouter } from 'react-router-dom';\n\n\n// const { API_KEY } = process.env\nconst API_URL = 'http://teampolaris.web.illinois.edu/search-actors'\n\nclass SearchActor extends Component {\n  state = {\n    query: '',\n    results: [],\n    queryAId: ''\n  }\n\n  getInfo = () => {\n    axios.get(`${API_URL}/${this.state.query}`)\n      .then(({ data }) => {\n        this.setState({\n          results: data\n        })\n      })\n  }\n\n  handleInputChange = () => {\n    this.setState({\n      query: this.search.value\n    }, () => {\n      if (this.state.query && this.state.query.length > 1) {\n        if (this.state.query.length % 2 === 0) {\n          this.getInfo()\n        }\n      } else if (!this.state.query) {\n      }\n    })\n  }\n\n  onSubmitHandler = (e) => {\n    e.preventDefault();\n    this.state.results.map(r => {\n        if (r.primaryTitle == this.state.query){\n          this.state.queryAId= r.AId\n      };\n    });\n    window.location.href = \"/#/actor/\"+this.state.queryAId;\n  }\n\n\n  render() {\n    return (\n\n      <form onSubmit={this.onSubmitHandler}>\n        \n        <Input list=\"browsers\" name=\"browser\" id=\"browser\"\n            style={\n                {\n                    marginTop: \"20px\",\n                    width: \"75%\",\n                    height:\"50px\",\n                    borderRadius: \"40px\",\n                    marginRight:\"20px\",\n                    marginBottom:\"20px\"\n                }\n            }\n            focusBorderColor=\"orange.400\"\n            size=\"lg\"\n            bg=\"white\"\n            placeholder=\"Search by actor\"\n            ref={input => this.search = input}\n            onChange={this.handleInputChange}\n        />\n\n        <ActorSuggestions results={this.state.results} />\n       \n        <Button bgColor=\"primary.200\" variant=\"solid\" type=\"submit\" onClick={this.onSubmitHandler}>Go</Button>\n       \n    \n      </form>\n   \n     \n    )\n\n  }\n}\n\nexport default SearchActor"]},"metadata":{},"sourceType":"module"}