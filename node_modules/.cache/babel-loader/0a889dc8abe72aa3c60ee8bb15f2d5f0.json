{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType, deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { alpha } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled, { shouldForwardProp } from '../styles/experimentalStyled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, styleProps.indeterminate && styles.indeterminate, styleProps.color !== 'default' && styles[`color${capitalize(styleProps.color)}`]), styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = styleProps;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst CheckboxRoot = experimentalStyled(SwitchBase, {\n  shouldForwardProp: prop => shouldForwardProp(prop) || prop === 'classes'\n}, {\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  color: theme.palette.text.secondary\n}, styleProps.color !== 'default' && {\n  [`&.Mui-checked, &.${checkboxClasses.indeterminate}`]: {\n    color: theme.palette[styleProps.color].main,\n    '&:hover': {\n      backgroundColor: alpha(theme.palette[styleProps.color].main, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }\n  },\n  '&.Mui-disabled': {\n    color: theme.palette.action.disabled\n  }\n}));\n\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\n\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\n\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\n\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'secondary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n\n  const styleProps = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size !== 'medium' ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size !== 'medium' ? size : indeterminateIcon.props.fontSize\n    }),\n    styleProps: styleProps,\n    ref: ref\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'secondary'\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","map":{"version":3,"sources":["/Users/simranbhamra/Documents/cinemates/node_modules/@material-ui/core/Checkbox/Checkbox.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","refType","deepmerge","unstable_composeClasses","composeClasses","SwitchBase","CheckBoxOutlineBlankIcon","CheckBoxIcon","alpha","IndeterminateCheckBoxIcon","capitalize","useThemeProps","experimentalStyled","shouldForwardProp","checkboxClasses","getCheckboxUtilityClass","jsx","_jsx","overridesResolver","props","styles","styleProps","indeterminate","color","root","useUtilityClasses","classes","slots","composedClasses","CheckboxRoot","prop","name","slot","theme","palette","text","secondary","main","backgroundColor","action","hoverOpacity","disabled","defaultCheckedIcon","defaultIcon","defaultIndeterminateIcon","Checkbox","forwardRef","inProps","ref","checkedIcon","icon","iconProp","indeterminateIcon","indeterminateIconProp","inputProps","size","other","type","cloneElement","fontSize","undefined","process","env","NODE_ENV","propTypes","checked","bool","node","object","oneOf","defaultChecked","disableRipple","id","string","inputRef","onChange","func","required","sx","value","any"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType, deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { alpha } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled, { shouldForwardProp } from '../styles/experimentalStyled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, styleProps.indeterminate && styles.indeterminate, styleProps.color !== 'default' && styles[`color${capitalize(styleProps.color)}`]), styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = styleProps;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst CheckboxRoot = experimentalStyled(SwitchBase, {\n  shouldForwardProp: prop => shouldForwardProp(prop) || prop === 'classes'\n}, {\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  color: theme.palette.text.secondary\n}, styleProps.color !== 'default' && {\n  [`&.Mui-checked, &.${checkboxClasses.indeterminate}`]: {\n    color: theme.palette[styleProps.color].main,\n    '&:hover': {\n      backgroundColor: alpha(theme.palette[styleProps.color].main, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }\n  },\n  '&.Mui-disabled': {\n    color: theme.palette.action.disabled\n  }\n}));\n\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\n\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\n\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\n\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'secondary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n\n  const styleProps = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size !== 'medium' ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size !== 'medium' ? size : indeterminateIcon.props.fontSize\n    }),\n    styleProps: styleProps,\n    ref: ref\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'secondary'\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;"]},"metadata":{},"sourceType":"module"}