{"ast":null,"code":"var _jsxFileName = \"/Users/simranbhamra/Documents/cinemates/src/Components/MovieInfo.js\";\nimport React, { Component } from 'react';\nimport { Text, GridItem, Box, Flex, Heading } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class MovieInfo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title_id: this.props.id,\n      movieinfo: []\n    };\n  }\n\n  getMovieInfo() {\n    console.log(this.state.title_id);\n    let api = 'http://18.206.168.148:5000/search-movie-by-id/' + this.state.title_id;\n    fetch(api).then(response => response.json()).then(response => {\n      this.setState({\n        movieinfo: [response]\n      });\n      console.log(this.state.movieinfo);\n    });\n  }\n\n  componentDidMount() {\n    this.getMovieInfo();\n  }\n\n  render() {\n    console.log(this.state.movieinfo);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.movieinfo.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: movie.full_size_url,\n          width: \"400\",\n          height: \"500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Heading, {\n          bg: \"white\",\n          children: [\" \", movie.primaryTitle, /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"xs\",\n            textAlign: \"right\",\n            children: [\"Duration:\", movie.runtime, \" mins\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          bg: \"white\",\n          p: \"5px\",\n          borderRadius: \"md\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            textAlign: \"left\",\n            children: [\"Rated \", movie.avgRating, \" by \", movie.numOfVotes, \" viewers.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            textAlign: \"left\",\n            children: [\"Directed by :\", movie.Director]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            textAlign: \"left\",\n            children: [\"Actors:\", movie.Actors]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            textAlign: \"left\",\n            children: [\"Writers :\", movie.Writer]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            textAlign: \"left\",\n            children: [\"Producers :\", movie.Producer]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            textAlign: \"left\",\n            children: [\"Music :\", movie.composer]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, movie.titleId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/simranbhamra/Documents/cinemates/src/Components/MovieInfo.js"],"names":["React","Component","Text","GridItem","Box","Flex","Heading","MovieInfo","constructor","props","state","title_id","id","movieinfo","getMovieInfo","console","log","api","fetch","then","response","json","setState","componentDidMount","render","map","movie","index","full_size_url","primaryTitle","runtime","avgRating","numOfVotes","Director","Actors","Writer","Producer","composer","titleId"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Text, GridItem,Box, Flex, Heading} from \"@chakra-ui/react\";\n\nexport default class MovieInfo extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = { \n        title_id : this.props.id,\n        movieinfo:[] \n        };\n      }\n\n\n      getMovieInfo() {\n        console.log(this.state.title_id)\n        let api = 'http://18.206.168.148:5000/search-movie-by-id/' + this.state.title_id\n\n        fetch(api)\n          .then(response => response.json())\n          .then(response => {\n            this.setState({\n                movieinfo: [response]\n            })\n            console.log(this.state.movieinfo)\n          })\n      }\n\n      \n      componentDidMount() {\n        this.getMovieInfo(); \n      }\n\n      render(){\n        console.log(this.state.movieinfo)\n          return (\n      <div>\n          \n        {this.state.movieinfo.map((movie, index) => (\n        \n        <div key={movie.titleId}>\n        { <img src={movie.full_size_url} width=\"400\" height=\"500\"/> } \n          <Heading bg = \"white\"> {movie.primaryTitle}\n          <Text fontSize=\"xs\" textAlign = \"right\">Duration:{movie.runtime} mins</Text>\n          </Heading>\n          <Box bg=\"white\" p=\"5px\" borderRadius=\"md\">\n            <Text textAlign = \"left\" >Rated {movie.avgRating} by {movie.numOfVotes} viewers.</Text>\n            <Text textAlign = \"left\" >Directed by :{movie.Director}</Text>\n            <Text textAlign = \"left\" >Actors:{movie.Actors}</Text>\n            <Text textAlign = \"left\" >Writers :{movie.Writer}</Text>\n            <Text textAlign = \"left\" >Producers :{movie.Producer}</Text>\n            <Text textAlign = \"left\" >Music :{movie.composer}</Text>\n            \n          {/* { <p>Rated {movie.avgRating} by {movie.numOfVotes} viewers.</p> } */}\n          </Box>  \n        </div>\n        \n    ))}\n\n        </div> \n        \n          );\n      }\n\n\n\n}\n\n"]},"metadata":{},"sourceType":"module"}