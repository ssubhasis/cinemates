{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge, elementTypeAcceptingRef } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport capitalize from '../utils/capitalize';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, styles[`underline${capitalize(styleProps.underline)}`], styleProps.component === 'button' && styles.button), styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = styleProps;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\n\nconst LinkRoot = experimentalStyled(Typography, {}, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver\n})(({\n  styleProps\n}) => {\n  return _extends({}, styleProps.underline === 'none' && {\n    textDecoration: 'none'\n  }, styleProps.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, styleProps.underline === 'always' && {\n    textDecoration: 'underline'\n  }, styleProps.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    component = 'a',\n    onBlur,\n    onFocus,\n    TypographyClasses,\n    underline = 'hover',\n    variant = 'inherit'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n\n  const handleBlur = event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  const handleFocus = event => {\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  const styleProps = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    styleProps: styleProps,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .any,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   * @default 'hover'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;","map":{"version":3,"sources":["/Users/simranbhamra/Documents/cinemates/node_modules/@material-ui/core/Link/Link.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","clsx","deepmerge","elementTypeAcceptingRef","unstable_composeClasses","composeClasses","capitalize","experimentalStyled","useThemeProps","useIsFocusVisible","useForkRef","Typography","linkClasses","getLinkUtilityClass","jsx","_jsx","overridesResolver","props","styles","styleProps","underline","component","button","root","useUtilityClasses","classes","focusVisible","slots","LinkRoot","name","slot","textDecoration","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","Link","forwardRef","inProps","ref","className","color","onBlur","onFocus","TypographyClasses","variant","other","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","setFocusVisible","useState","handlerRef","handleBlur","event","current","handleFocus","process","env","NODE_ENV","propTypes","children","node","object","string","any","func","sx","oneOf","oneOfType"],"mappings":"AAAA,OAAOA,6BAAP,MAA0C,yDAA1C;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,SAAT,EAAoBC,uBAApB,QAAmD,oBAAnD;AACA,SAASC,uBAAuB,IAAIC,cAApC,QAA0D,uBAA1D;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,kBAAP,MAA+B,8BAA/B;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,WAAP,IAAsBC,mBAAtB,QAAiD,eAAjD;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;;AAEA,MAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3C,QAAM;AACJC,IAAAA;AADI,MAEFF,KAFJ;AAGA,SAAOf,SAAS,CAACJ,QAAQ,CAAC,EAAD,EAAKoB,MAAM,CAAE,YAAWZ,UAAU,CAACa,UAAU,CAACC,SAAZ,CAAuB,EAA9C,CAAX,EAA6DD,UAAU,CAACE,SAAX,KAAyB,QAAzB,IAAqCH,MAAM,CAACI,MAAzG,CAAT,EAA2HJ,MAAM,CAACK,IAAP,IAAe,EAA1I,CAAhB;AACD,CALD;;AAOA,MAAMC,iBAAiB,GAAGL,UAAU,IAAI;AACtC,QAAM;AACJM,IAAAA,OADI;AAEJJ,IAAAA,SAFI;AAGJK,IAAAA,YAHI;AAIJN,IAAAA;AAJI,MAKFD,UALJ;AAMA,QAAMQ,KAAK,GAAG;AACZJ,IAAAA,IAAI,EAAE,CAAC,MAAD,EAAU,YAAWjB,UAAU,CAACc,SAAD,CAAY,EAA3C,EAA8CC,SAAS,KAAK,QAAd,IAA0B,QAAxE,EAAkFK,YAAY,IAAI,cAAlG;AADM,GAAd;AAGA,SAAOrB,cAAc,CAACsB,KAAD,EAAQd,mBAAR,EAA6BY,OAA7B,CAArB;AACD,CAXD;;AAaA,MAAMG,QAAQ,GAAGrB,kBAAkB,CAACI,UAAD,EAAa,EAAb,EAAiB;AAClDkB,EAAAA,IAAI,EAAE,SAD4C;AAElDC,EAAAA,IAAI,EAAE,MAF4C;AAGlDd,EAAAA;AAHkD,CAAjB,CAAlB,CAId,CAAC;AACFG,EAAAA;AADE,CAAD,KAEG;AACJ,SAAOrB,QAAQ,CAAC,EAAD,EAAKqB,UAAU,CAACC,SAAX,KAAyB,MAAzB,IAAmC;AACrDW,IAAAA,cAAc,EAAE;AADqC,GAAxC,EAEZZ,UAAU,CAACC,SAAX,KAAyB,OAAzB,IAAoC;AACrCW,IAAAA,cAAc,EAAE,MADqB;AAErC,eAAW;AACTA,MAAAA,cAAc,EAAE;AADP;AAF0B,GAFxB,EAOZZ,UAAU,CAACC,SAAX,KAAyB,QAAzB,IAAqC;AACtCW,IAAAA,cAAc,EAAE;AADsB,GAPzB,EASZZ,UAAU,CAACE,SAAX,KAAyB,QAAzB,IAAqC;AACtCW,IAAAA,QAAQ,EAAE,UAD4B;AAEtCC,IAAAA,uBAAuB,EAAE,aAFa;AAGtCC,IAAAA,eAAe,EAAE,aAHqB;AAItC;AACA;AACAC,IAAAA,OAAO,EAAE,CAN6B;AAOtCC,IAAAA,MAAM,EAAE,CAP8B;AAQtCC,IAAAA,MAAM,EAAE,CAR8B;AAStC;AACAC,IAAAA,YAAY,EAAE,CAVwB;AAWtCC,IAAAA,OAAO,EAAE,CAX6B;AAYtC;AACAC,IAAAA,MAAM,EAAE,SAb8B;AActCC,IAAAA,UAAU,EAAE,MAd0B;AAetCC,IAAAA,aAAa,EAAE,QAfuB;AAgBtCC,IAAAA,aAAa,EAAE,MAhBuB;AAiBtC;AACAC,IAAAA,gBAAgB,EAAE,MAlBoB;AAmBtC;AACA,2BAAuB;AACrBC,MAAAA,WAAW,EAAE,MADQ,CACD;;AADC,KApBe;AAwBtC,KAAE,KAAIjC,WAAW,CAACc,YAAa,EAA/B,GAAmC;AACjCS,MAAAA,OAAO,EAAE;AADwB;AAxBG,GATzB,CAAf;AAqCD,CA5CgB,CAAjB;AA6CA,MAAMW,IAAI,GAAG,aAAa/C,KAAK,CAACgD,UAAN,CAAiB,SAASD,IAAT,CAAcE,OAAd,EAAuBC,GAAvB,EAA4B;AACrE,QAAMhC,KAAK,GAAGT,aAAa,CAAC;AAC1BS,IAAAA,KAAK,EAAE+B,OADmB;AAE1BnB,IAAAA,IAAI,EAAE;AAFoB,GAAD,CAA3B;;AAKA,QAAM;AACJqB,IAAAA,SADI;AAEJC,IAAAA,KAAK,GAAG,SAFJ;AAGJ9B,IAAAA,SAAS,GAAG,GAHR;AAIJ+B,IAAAA,MAJI;AAKJC,IAAAA,OALI;AAMJC,IAAAA,iBANI;AAOJlC,IAAAA,SAAS,GAAG,OAPR;AAQJmC,IAAAA,OAAO,GAAG;AARN,MASFtC,KATJ;AAAA,QAUMuC,KAAK,GAAG3D,6BAA6B,CAACoB,KAAD,EAAQ,CAAC,WAAD,EAAc,OAAd,EAAuB,WAAvB,EAAoC,QAApC,EAA8C,SAA9C,EAAyD,mBAAzD,EAA8E,WAA9E,EAA2F,SAA3F,CAAR,CAV3C;;AAYA,QAAM;AACJwC,IAAAA,iBADI;AAEJL,IAAAA,MAAM,EAAEM,iBAFJ;AAGJL,IAAAA,OAAO,EAAEM,kBAHL;AAIJV,IAAAA,GAAG,EAAEW;AAJD,MAKFnD,iBAAiB,EALrB;AAMA,QAAM,CAACiB,YAAD,EAAemC,eAAf,IAAkC9D,KAAK,CAAC+D,QAAN,CAAe,KAAf,CAAxC;AACA,QAAMC,UAAU,GAAGrD,UAAU,CAACuC,GAAD,EAAMW,eAAN,CAA7B;;AAEA,QAAMI,UAAU,GAAGC,KAAK,IAAI;AAC1BP,IAAAA,iBAAiB,CAACO,KAAD,CAAjB;;AAEA,QAAIR,iBAAiB,CAACS,OAAlB,KAA8B,KAAlC,EAAyC;AACvCL,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD;;AAED,QAAIT,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACa,KAAD,CAAN;AACD;AACF,GAVD;;AAYA,QAAME,WAAW,GAAGF,KAAK,IAAI;AAC3BN,IAAAA,kBAAkB,CAACM,KAAD,CAAlB;;AAEA,QAAIR,iBAAiB,CAACS,OAAlB,KAA8B,IAAlC,EAAwC;AACtCL,MAAAA,eAAe,CAAC,IAAD,CAAf;AACD;;AAED,QAAIR,OAAJ,EAAa;AACXA,MAAAA,OAAO,CAACY,KAAD,CAAP;AACD;AACF,GAVD;;AAYA,QAAM9C,UAAU,GAAGrB,QAAQ,CAAC,EAAD,EAAKmB,KAAL,EAAY;AACrCkC,IAAAA,KADqC;AAErC9B,IAAAA,SAFqC;AAGrCK,IAAAA,YAHqC;AAIrCN,IAAAA,SAJqC;AAKrCmC,IAAAA;AALqC,GAAZ,CAA3B;;AAQA,QAAM9B,OAAO,GAAGD,iBAAiB,CAACL,UAAD,CAAjC;AACA,SAAO,aAAaJ,IAAI,CAACa,QAAD,EAAW9B,QAAQ,CAAC;AAC1CoD,IAAAA,SAAS,EAAEjD,IAAI,CAACwB,OAAO,CAACF,IAAT,EAAe2B,SAAf,CAD2B;AAE1CzB,IAAAA,OAAO,EAAE6B,iBAFiC;AAG1CH,IAAAA,KAAK,EAAEA,KAHmC;AAI1C9B,IAAAA,SAAS,EAAEA,SAJ+B;AAK1C+B,IAAAA,MAAM,EAAEY,UALkC;AAM1CX,IAAAA,OAAO,EAAEc,WANiC;AAO1ClB,IAAAA,GAAG,EAAEc,UAPqC;AAQ1C5C,IAAAA,UAAU,EAAEA,UAR8B;AAS1CoC,IAAAA,OAAO,EAAEA;AATiC,GAAD,EAUxCC,KAVwC,CAAnB,CAAxB;AAWD,CAvEyB,CAA1B;AAwEAY,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCxB,IAAI,CAACyB;AAC7C;AADwC,EAEtC;AACA;AACA;AACA;AACA;;AAEA;AACF;AACA;AACEC,EAAAA,QAAQ,EAAExE,SAAS,CAACyE,IATpB;;AAWA;AACF;AACA;AACEhD,EAAAA,OAAO,EAAEzB,SAAS,CAAC0E,MAdnB;;AAgBA;AACF;AACA;AACExB,EAAAA,SAAS,EAAElD,SAAS,CAAC2E,MAnBrB;;AAqBA;AACF;AACA;AACA;AACExB,EAAAA,KAAK,EAAEnD;AACP;AADgB,GAEf4E,GA3BD;;AA6BA;AACF;AACA;AACA;AACEvD,EAAAA,SAAS,EAAElB,uBAjCX;;AAmCA;AACF;AACA;AACEiD,EAAAA,MAAM,EAAEpD,SAAS,CAAC6E,IAtClB;;AAwCA;AACF;AACA;AACExB,EAAAA,OAAO,EAAErD,SAAS,CAAC6E,IA3CnB;;AA6CA;AACF;AACA;AACEC,EAAAA,EAAE,EAAE9E,SAAS,CAAC0E,MAhDd;;AAkDA;AACF;AACA;AACEpB,EAAAA,iBAAiB,EAAEtD,SAAS,CAAC0E,MArD7B;;AAuDA;AACF;AACA;AACA;AACEtD,EAAAA,SAAS,EAAEpB,SAAS,CAAC+E,KAAV,CAAgB,CAAC,QAAD,EAAW,OAAX,EAAoB,MAApB,CAAhB,CA3DX;;AA6DA;AACF;AACA;AACA;AACExB,EAAAA,OAAO,EAAEvD;AACT;AADkB,GAEjBgF,SAFQ,CAEE,CAAChF,SAAS,CAAC+E,KAAV,CAAgB,CAAC,OAAD,EAAU,OAAV,EAAmB,QAAnB,EAA6B,SAA7B,EAAwC,IAAxC,EAA8C,IAA9C,EAAoD,IAApD,EAA0D,IAA1D,EAAgE,IAAhE,EAAsE,IAAtE,EAA4E,SAA5E,EAAuF,UAAvF,EAAmG,WAAnG,EAAgH,WAAhH,CAAhB,CAAD,EAAgJ/E,SAAS,CAAC2E,MAA1J,CAFF;AAjET,CAFF,GAsEI,KAAK,CAtET;AAuEA,eAAe7B,IAAf","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge, elementTypeAcceptingRef } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport capitalize from '../utils/capitalize';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, styles[`underline${capitalize(styleProps.underline)}`], styleProps.component === 'button' && styles.button), styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = styleProps;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\n\nconst LinkRoot = experimentalStyled(Typography, {}, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver\n})(({\n  styleProps\n}) => {\n  return _extends({}, styleProps.underline === 'none' && {\n    textDecoration: 'none'\n  }, styleProps.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, styleProps.underline === 'always' && {\n    textDecoration: 'underline'\n  }, styleProps.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    component = 'a',\n    onBlur,\n    onFocus,\n    TypographyClasses,\n    underline = 'hover',\n    variant = 'inherit'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n\n  const handleBlur = event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  const handleFocus = event => {\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  const styleProps = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    styleProps: styleProps,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .any,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   * @default 'hover'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;"]},"metadata":{},"sourceType":"module"}