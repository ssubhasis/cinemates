{"ast":null,"code":"var _jsxFileName = \"/Users/simranbhamra/Documents/cinemates/src/Components/HighestRatedMovies.js\";\nimport React, { Component } from 'react';\nimport { Grid, GridItem, Box, Text, Center, Wrap } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass HighestRatedMovies extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      highestrated: [],\n      titleId: ''\n    };\n  }\n\n  getHighestRated() {\n    fetch('http://18.206.168.148:5000/movies/highestrated ').then(response => response.json()).then(response => {\n      this.setState({\n        highestrated: response\n      });\n      console.log(this.state);\n    });\n  }\n\n  componentDidMount() {\n    this.getHighestRated();\n  }\n\n  handleClick(movie) {\n    //e.preventDefault();\n    window.location.href = \"/#/movie/\" + movie.titleId;\n    console.log(movie);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Center, {\n        children: /*#__PURE__*/_jsxDEV(Wrap, {\n          borderRadius: \"lg\",\n          bg: \"primary.500\",\n          gap: 6,\n          p: \"30px\",\n          width: \"90%\",\n          children: [this.state.highestrated.map((movie, index) => /*#__PURE__*/_jsxDEV(Box, {\n            w: \"15rem\",\n            bg: \"primary.500\",\n            p: \"5px\",\n            borderRadius: \"md\",\n            onClick: () => this.handleClick(movie),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Center, {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: movie.cover_url,\n                  style: {\n                    width: \"50%\",\n                    height: \"auto\",\n                    borderRadius: \"5%\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                color: \"white\",\n                children: movie.primaryTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: \"white\"\n                },\n                children: [\"Rated \", movie.avgRating, \"by \", movie.numOfVotes, \"viewers.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 37\n              }, this)]\n            }, movie.titleId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this)), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default HighestRatedMovies;","map":{"version":3,"sources":["/Users/simranbhamra/Documents/cinemates/src/Components/HighestRatedMovies.js"],"names":["React","Component","Grid","GridItem","Box","Text","Center","Wrap","HighestRatedMovies","constructor","props","state","highestrated","titleId","getHighestRated","fetch","then","response","json","setState","console","log","componentDidMount","handleClick","movie","window","location","href","render","map","index","cover_url","width","height","borderRadius","primaryTitle","color","avgRating","numOfVotes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,IAAR,EAAcC,QAAd,EAAuBC,GAAvB,EAA4BC,IAA5B,EAAkCC,MAAlC,EAA0CC,IAA1C,QAAqD,kBAArD;;;AAEA,MAAMC,kBAAN,SAAiCR,KAAK,CAACC,SAAvC,CAAgD;AAC5CQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAC,EADF;AAEXC,MAAAA,OAAO,EAAC;AAFG,KAAb;AAID;;AAGDC,EAAAA,eAAe,GAAG;AAChBC,IAAAA,KAAK,CAAC,iDAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQC,QAAQ,IAAI;AAChB,WAAKE,QAAL,CAAc;AACZP,QAAAA,YAAY,EAAEK;AADF,OAAd;AAGAG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAjB;AACD,KAPH;AAQD;;AAGDW,EAAAA,iBAAiB,GAAG;AAClB,SAAKR,eAAL;AACD;;AAEDS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB;AACDC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,cAAaH,KAAK,CAACX,OAA1C;AACCO,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD;;AAEDI,EAAAA,MAAM,GAAE;AACJ,wBACN;AAAA,6BACA,QAAC,MAAD;AAAA,+BAEgB,QAAC,IAAD;AAAM,UAAA,YAAY,EAAC,IAAnB;AAAwB,UAAA,EAAE,EAAC,aAA3B;AACI,UAAA,GAAG,EAAE,CADT;AAEI,UAAA,CAAC,EAAC,MAFN;AAGI,UAAA,KAAK,EAAC,KAHV;AAAA,qBAOI,KAAKjB,KAAL,CAAWC,YAAX,CAAwBiB,GAAxB,CAA4B,CAACL,KAAD,EAAQM,KAAR,kBACxB,QAAC,GAAD;AAAK,YAAA,CAAC,EAAC,OAAP;AAAe,YAAA,EAAE,EAAC,aAAlB;AAAgC,YAAA,CAAC,EAAC,KAAlC;AAAwC,YAAA,YAAY,EAAC,IAArD;AAA0D,YAAA,OAAO,EAAE,MAAM,KAAKP,WAAL,CAAiBC,KAAjB,CAAzE;AAAA,mCAEI;AAAA,sCAII,QAAC,MAAD;AAAA,uCACA;AAAK,kBAAA,GAAG,EACAA,KAAK,CAACO,SADd;AAGI,kBAAA,KAAK,EACD;AAEIC,oBAAAA,KAAK,EAAE,KAFX;AAGIC,oBAAAA,MAAM,EAAE,MAHZ;AAIIC,oBAAAA,YAAY,EAAC;AAJjB;AAJR;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAmBI,QAAC,IAAD;AAAM,gBAAA,KAAK,EAAC,OAAZ;AAAA,0BACIV,KAAK,CAACW;AADV;AAAA;AAAA;AAAA;AAAA,sBAnBJ,eAuBI;AAAG,gBAAA,KAAK,EAAE;AAACC,kBAAAA,KAAK,EAAC;AAAP,iBAAV;AAAA,qCACIZ,KAAK,CAACa,SADV,SAIIb,KAAK,CAACc,UAJV;AAAA;AAAA;AAAA;AAAA;AAAA,sBAvBJ;AAAA,eACId,KAAK,CAACX,OADV;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,kBADJ,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFhB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADM;AAqDD;;AAtFuC;;AA6FhD,eAAeL,kBAAf","sourcesContent":["import React, { Component } from 'react';\nimport {Grid, GridItem,Box, Text, Center, Wrap} from \"@chakra-ui/react\";\n\nclass HighestRatedMovies extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = { \n          highestrated:[] ,\n          titleId:''\n        };\n      }\n\n\n      getHighestRated() {\n        fetch('http://18.206.168.148:5000/movies/highestrated ')\n          .then(response => response.json())\n          .then(response => {\n            this.setState({\n              highestrated: response\n            })\n            console.log(this.state)\n          })\n      }\n\n      \n      componentDidMount() {\n        this.getHighestRated(); \n      }\n\n      handleClick(movie) {\n        //e.preventDefault();\n       window.location.href = \"/#/movie/\"+ movie.titleId;\n        console.log(movie); \n      }\n      \n      render(){\n          return (\n    <div>\n    <Center> \n    \n                    <Wrap borderRadius=\"lg\" bg=\"primary.500\"\n                        gap={6}\n                        p=\"30px\"\n                        width=\"90%\">\n    \n    \n                        {\n                        this.state.highestrated.map((movie, index) => (\n                            <Box w=\"15rem\" bg=\"primary.500\" p=\"5px\" borderRadius=\"md\" onClick={() => this.handleClick(movie)}>\n    \n                                <div  key={\n                                    movie.titleId\n                                }>\n    \n                                    <Center> \n                                    <img src={\n                                            movie.cover_url\n                                        }\n                                        style={\n                                            {\n    \n                                                width: \"50%\",\n                                                height: \"auto\",\n                                                borderRadius:\"5%\"\n    \n                                            }\n    \n                                        }/>\n                                    </Center> \n                                    <Text color=\"white\" >{\n                                        movie.primaryTitle\n                                    }</Text>\n    \n                                    <p style={{color:\"white\"}}>Rated {\n                                        movie.avgRating\n                                    }\n                                        by {\n                                        movie.numOfVotes\n                                    }\n                                        viewers.</p>\n                                </div>\n    \n                            </Box>\n                        ))\n                    } </Wrap>\n    \n    </Center>\n                </div>\n            );\n        }\n    \n\n\n\n}\n\nexport default HighestRatedMovies; "]},"metadata":{},"sourceType":"module"}