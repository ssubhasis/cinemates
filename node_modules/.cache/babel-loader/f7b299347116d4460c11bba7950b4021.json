{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { deepmerge } from '@material-ui/utils';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport capitalize from '../utils/capitalize';\nimport { getFormHelperTextUtilityClasses } from './formHelperTextClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, styleProps.size && styles[`size${capitalize(styleProps.size)}`], styleProps.contained && styles.contained, styleProps.filled && styles.filled), styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    contained,\n    size,\n    disabled,\n    error,\n    filled,\n    focused,\n    required\n  } = styleProps;\n  const slots = {\n    root: ['root', disabled && 'disabled', error && 'error', size && `size${capitalize(size)}`, contained && 'contained', focused && 'focused', filled && 'filled', required && 'required']\n  };\n  return composeClasses(slots, getFormHelperTextUtilityClasses, classes);\n};\n\nconst FormHelperTextRoot = experimentalStyled('p', {}, {\n  name: 'MuiFormHelperText',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  color: theme.palette.text.secondary\n}, theme.typography.caption, {\n  textAlign: 'left',\n  marginTop: 3,\n  marginRight: 0,\n  marginBottom: 0,\n  marginLeft: 0,\n  '&.Mui-disabled': {\n    color: theme.palette.text.disabled\n  },\n  '&.Mui-error': {\n    color: theme.palette.error.main\n  }\n}, styleProps.size === 'small' && {\n  marginTop: 4\n}, styleProps.contained && {\n  marginLeft: 14,\n  marginRight: 14\n}));\nconst FormHelperText = /*#__PURE__*/React.forwardRef(function FormHelperText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormHelperText'\n  });\n\n  const {\n    children,\n    className,\n    component = 'p'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"margin\", \"required\", \"variant\"]);\n\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['variant', 'size', 'disabled', 'error', 'filled', 'focused', 'required']\n  });\n\n  const styleProps = _extends({}, props, {\n    component,\n    contained: fcs.variant === 'filled' || fcs.variant === 'outlined',\n    variant: fcs.variant,\n    size: fcs.size,\n    disabled: fcs.disabled,\n    error: fcs.error,\n    filled: fcs.filled,\n    focused: fcs.focused,\n    required: fcs.required\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(FormHelperTextRoot, _extends({\n    as: component,\n    styleProps: styleProps,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: children === ' ' ?\n    /*#__PURE__*/\n    // notranslate needed while Google Translate will not fix zero-width space issue\n    // eslint-disable-next-line react/no-danger\n    _jsx(\"span\", {\n      className: \"notranslate\",\n      dangerouslySetInnerHTML: {\n        __html: '&#8203;'\n      }\n    }) : children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormHelperText.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   *\n   * If `' '` is provided, the component reserves one line height for displaying a future message.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, helper text should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use filled classes key.\n   */\n  filled: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use focused classes key.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n\n  /**\n   * If `true`, the helper text should use required classes key.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default FormHelperText;","map":{"version":3,"sources":["/Users/simranbhamra/Documents/cinemates/node_modules/@material-ui/core/FormHelperText/FormHelperText.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","clsx","unstable_composeClasses","composeClasses","deepmerge","formControlState","useFormControl","experimentalStyled","capitalize","getFormHelperTextUtilityClasses","useThemeProps","jsx","_jsx","overridesResolver","props","styles","styleProps","size","contained","filled","root","useUtilityClasses","classes","disabled","error","focused","required","slots","FormHelperTextRoot","name","slot","theme","color","palette","text","secondary","typography","caption","textAlign","marginTop","marginRight","marginBottom","marginLeft","main","FormHelperText","forwardRef","inProps","ref","children","className","component","other","muiFormControl","fcs","states","variant","as","dangerouslySetInnerHTML","__html","process","env","NODE_ENV","propTypes","node","object","string","elementType","bool","margin","oneOf","sx"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { deepmerge } from '@material-ui/utils';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport capitalize from '../utils/capitalize';\nimport { getFormHelperTextUtilityClasses } from './formHelperTextClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, styleProps.size && styles[`size${capitalize(styleProps.size)}`], styleProps.contained && styles.contained, styleProps.filled && styles.filled), styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    contained,\n    size,\n    disabled,\n    error,\n    filled,\n    focused,\n    required\n  } = styleProps;\n  const slots = {\n    root: ['root', disabled && 'disabled', error && 'error', size && `size${capitalize(size)}`, contained && 'contained', focused && 'focused', filled && 'filled', required && 'required']\n  };\n  return composeClasses(slots, getFormHelperTextUtilityClasses, classes);\n};\n\nconst FormHelperTextRoot = experimentalStyled('p', {}, {\n  name: 'MuiFormHelperText',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  color: theme.palette.text.secondary\n}, theme.typography.caption, {\n  textAlign: 'left',\n  marginTop: 3,\n  marginRight: 0,\n  marginBottom: 0,\n  marginLeft: 0,\n  '&.Mui-disabled': {\n    color: theme.palette.text.disabled\n  },\n  '&.Mui-error': {\n    color: theme.palette.error.main\n  }\n}, styleProps.size === 'small' && {\n  marginTop: 4\n}, styleProps.contained && {\n  marginLeft: 14,\n  marginRight: 14\n}));\nconst FormHelperText = /*#__PURE__*/React.forwardRef(function FormHelperText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormHelperText'\n  });\n\n  const {\n    children,\n    className,\n    component = 'p'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"margin\", \"required\", \"variant\"]);\n\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['variant', 'size', 'disabled', 'error', 'filled', 'focused', 'required']\n  });\n\n  const styleProps = _extends({}, props, {\n    component,\n    contained: fcs.variant === 'filled' || fcs.variant === 'outlined',\n    variant: fcs.variant,\n    size: fcs.size,\n    disabled: fcs.disabled,\n    error: fcs.error,\n    filled: fcs.filled,\n    focused: fcs.focused,\n    required: fcs.required\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(FormHelperTextRoot, _extends({\n    as: component,\n    styleProps: styleProps,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: children === ' ' ?\n    /*#__PURE__*/\n    // notranslate needed while Google Translate will not fix zero-width space issue\n    // eslint-disable-next-line react/no-danger\n    _jsx(\"span\", {\n      className: \"notranslate\",\n      dangerouslySetInnerHTML: {\n        __html: '&#8203;'\n      }\n    }) : children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormHelperText.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   *\n   * If `' '` is provided, the component reserves one line height for displaying a future message.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, helper text should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use filled classes key.\n   */\n  filled: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use focused classes key.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n\n  /**\n   * If `true`, the helper text should use required classes key.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default FormHelperText;"]},"metadata":{},"sourceType":"module"}